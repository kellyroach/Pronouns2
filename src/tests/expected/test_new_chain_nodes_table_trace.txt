################################################################
#
#     test_new_chain_nodes_table_trace.txt
#
################################################################

################################################################
#
#     (1.1) The boy who was fooling her kissed the girl who loved him.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:boy, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:5, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)       !
! 4  ! (N, lit:boy, ftr:[---+--+--], up:3, dn:0,     !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,    !
!    !  pr:0, su:0, nu:4)                            !
! 5  ! (N, lit:her, ftr:[+--+-++-?], up:3, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:2, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+-++-?], np:5, ch:0, co:0) !
! 6  ! (N, lit:girl, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:9, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0) !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:girl, ftr:[---+-++--], up:7, dn:0,    !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,    !
!    !  pr:0, su:0, nu:8)                            !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,     !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:6, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, girl)
                sc(him, girl) = True
                agr(him, girl) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, her)
                sc(him, her) = True
                agr(him, her) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, boy)
                sc(him, boy) = True
                agr(him, boy) = True
                rnr(him, boy) = True
                chaining_e_to_n(himA, boy)
                    agr(himA, boy) = True
                    new_chain(himA, boy)
                        new_chain: create boyB
                        new_chain: create boyB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:boy, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:9A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:boy, ftr:[---+--+--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:her, ftr:[+--+-++-?], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+-++-?], np:5, ch:0, co:0)  !
! 6  ! (N, lit:girl, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:9, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)  !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:girl, ftr:[---+-++--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:8)                             !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:6, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, him)
                sc(her, him) = True
                agr(her, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, girl)
                sc(her, girl) = True
                agr(her, girl) = True
                rnr(her, girl) = True
                chaining_e_to_n(herA, girl)
                    agr(herA, girl) = True
                    new_chain(herA, girl)
                        new_chain: create girlB
                        new_chain: create girlB^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:boy, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:9A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:boy, ftr:[---+--+--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:her, ftr:[+--+-++-?], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+-++-?], np:5, ch:0, co:0)  !
! 6  ! (N, lit:girl, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:9, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:5A, co:0) !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:girl, ftr:[---+-++--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:8)                             !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:6, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(her, boy)
                sc(her, boy) = True
                agr(her, boy) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.2) *John killed herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:0, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+-+++-], np:3, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: John
            chaining_n_to_n(herself, John)
                sc(herself, John) = True
                agr(herself, John) = False
            chaining_n_to_n: exiting
            simplex_pred(John)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.4) Some students think they are smarter than they are.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:students, ftr:[---++?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---++?+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:they, ftr:[+--++?+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:0, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+--++?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:they, ftr:[+--++?+--], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
!____!________________________________________________!

    init_table: exiting
    chaining_n(they)
        non_refl_chaining(they)
            chaining_n_to_n(they, students)
                sc(they, students) = True
                agr(they, students) = True
                rnr(they, students) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.6) My uncle has never ridden a camel but his brother has, although it was lame.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:my, ftr:[++---?+-+], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[++---?+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:uncle, ftr:[---+--+--], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)   !
!  5  ! (N, lit:camel, ftr:[---+-?+--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:his, ftr:[+--+--+-+], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!     !  pr:5, su:8, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+-+], np:7, ch:0, co:0)   !
!  8  ! (N, lit:brother, ftr:[---+--+--], up:6, dn:0,   !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:7, su:11, nu:8)                             !
!  8A ! (E, sub:A, ftr:[---+--+--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:camel, ftr:[---+-?+--], up:6, dn:0,     !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:0, ec:0,     !
!     !  pr:0, su:0, nu:9)                              !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:8, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-?---], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, brother)
                sc(it, brother) = True
                agr(it, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, his)
                sc(it, his) = True
                agr(it, his) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, camel)
                sc(it, camel) = True
                agr(it, camel) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, uncle)
                sc(it, uncle) = True
                agr(it, uncle) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, my)
                sc(it, my) = True
                agr(it, my) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(his)
        non_refl_chaining(his)
            chaining_n_to_n(his, it)
                sc(his, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(his, brother)
                sc(his, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(his, camel)
                sc(his, camel) = True
                agr(his, camel) = True
                rnr(his, camel) = True
                chaining_e_to_n(hisA, camel)
                    agr(hisA, camel) = True
                    new_chain(hisA, camel)
                        new_chain: create camelB
                        new_chain: create camelB^hisA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:my, ftr:[++---?+-+], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[++---?+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:uncle, ftr:[---+--+--], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)   !
!  5  ! (N, lit:camel, ftr:[---+-?+--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:7A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:his, ftr:[+--+--+-+], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!     !  pr:5, su:8, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+-+], np:7, ch:0, co:0)   !
!  8  ! (N, lit:brother, ftr:[---+--+--], up:6, dn:0,   !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:7, su:11, nu:8)                             !
!  8A ! (E, sub:A, ftr:[---+--+--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:camel, ftr:[---+-?+--], up:6, dn:0,     !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:0, ec:0,     !
!     !  pr:0, su:0, nu:9)                              !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:8, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-?---], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(his, uncle)
                sc(his, uncle) = True
                agr(his, uncle) = True
                rnr(his, uncle) = True
                chaining_e_to_n(hisA, uncle)
                    agr(hisA, uncle) = True
                    new_chain(hisA, uncle)
                        new_chain: create uncleB
                        new_chain: create uncleB^hisA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:my, ftr:[++---?+-+], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[++---?+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:uncle, ftr:[---+--+--], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:7A, co:0)  !
!  5  ! (N, lit:camel, ftr:[---+-?+--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:7A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:his, ftr:[+--+--+-+], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!     !  pr:5, su:8, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+-+], np:7, ch:0, co:0)   !
!  8  ! (N, lit:brother, ftr:[---+--+--], up:6, dn:0,   !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:7, su:11, nu:8)                             !
!  8A ! (E, sub:A, ftr:[---+--+--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:camel, ftr:[---+-?+--], up:6, dn:0,     !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:0, ec:0,     !
!     !  pr:0, su:0, nu:9)                              !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:8, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-?---], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(his, my)
                sc(his, my) = True
                agr(his, my) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(my)
        non_refl_chaining(my)
            chaining_n_to_n(my, it)
                sc(my, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, brother)
                sc(my, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, his)
                sc(my, his) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, camel)
                sc(my, camel) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, uncle)
                sc(my, uncle) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.10) I like the fresh candy better than the stale PHI.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:candy, ftr:[---+-?---], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0) !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, candy)
                sc(PHI, candy) = True
                agr(PHI, candy) = True
                rnr(PHI, candy) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, candy)
                sc(I, candy) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.11) If John can, he will do it.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:0, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.12) If he can, John will do it.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:he, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:John, ftr:[---+--+--], up:4, dn:0,    !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.13) John will do it if he can.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:0, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.14) He will do it if John can.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:he, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:John, ftr:[---+--+--], up:4, dn:0,    !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.24) I have a cat at home, but hate it.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:cat, ftr:[---+-?+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:home, ftr:[---+-?---], up:2, dn:0,    !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:7, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:5, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:it, ftr:[+--+-?---], up:6, dn:0,      !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+-?---], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, PHI)
                sc(it, PHI) = True
                agr(it, PHI) = True
                rnr(it, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, home)
                sc(it, home) = True
                agr(it, home) = True
                rnr(it, home) = True
                chaining_e_to_n(itA, home)
                    agr(itA, home) = True
                    new_chain(itA, home)
                        new_chain: create homeB
                        new_chain: create homeB^itA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:cat, ftr:[---+-?+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:home, ftr:[---+-?---], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:7, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:5, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)  !
! 8  ! (N, lit:it, ftr:[+--+-?---], up:6, dn:0,       !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-?---], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, cat)
                sc(it, cat) = True
                agr(it, cat) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, I)
                sc(it, I) = True
                agr(it, I) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, it)
                sc(PHI, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, home)
                sc(PHI, home) = True
                agr(PHI, home) = True
                rnr(PHI, home) = True
                chaining_e_to_n(PHIA, home)
                    agr(PHIA, home) = True
                    new_chain(PHIA, home)
                        new_chain: create homeC
                        new_chain: create homeC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:cat, ftr:[---+-?+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:home, ftr:[---+-?---], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-?---], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:it, ftr:[+--+-?---], up:6, dn:0,        !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+--+-?---], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, cat)
                sc(PHI, cat) = True
                agr(PHI, cat) = True
                rnr(PHI, cat) = True
                chaining_e_to_n(PHIA, cat)
                    agr(PHIA, cat) = True
                    new_chain(PHIA, cat)
                        new_chain: create catB
                        new_chain: create catB^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:cat, ftr:[---+-?+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+-?+--], np:4, ch:7A, co:0)  !
! 5  ! (N, lit:home, ftr:[---+-?---], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-?---], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:it, ftr:[+--+-?---], up:6, dn:0,        !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+--+-?---], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = True
                chaining_e_to_n(PHIA, I)
                    agr(PHIA, I) = True
                    new_chain(PHIA, I)
                        new_chain: create IB
                        new_chain: create IB^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)  !
! 4  ! (N, lit:cat, ftr:[---+-?+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+-?+--], np:4, ch:7A, co:0)  !
! 5  ! (N, lit:home, ftr:[---+-?---], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-?---], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:it, ftr:[+--+-?---], up:6, dn:0,        !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+--+-?---], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, it)
                sc(I, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, home)
                sc(I, home) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, cat)
                sc(I, cat) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.25) I want to get a cat for myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:4, nu:2)                            !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)       !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,     !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:2, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0) !
! 5  ! (N, lit:cat, ftr:[---+-?+--], up:3, dn:0,     !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:0) !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:3, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: cat
            chaining_n_to_n(myself, cat)
                sc(myself, cat) = True
                agr(myself, cat) = False
            chaining_n_to_n: exiting
            simplex_pred(cat)
            simplex_pred: PHI
            chaining_n_to_n(myself, PHI)
                sc(myself, PHI) = True
                agr(myself, PHI) = True
                rnr(myself, PHI) = True
                chaining_e_to_n(myselfA, PHI)
                    agr(myselfA, PHI) = True
                    new_chain(myselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:2, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[++---?+--], np:4, ch:6A, co:0) !
! 5  ! (N, lit:cat, ftr:[---+-?+--], up:3, dn:0,      !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:3, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, myself)
                sc(PHI, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, cat)
                sc(PHI, cat) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = True
                chaining_e_to_n(PHIA, I)
                    agr(PHIA, I) = True
                    new_chain(PHIA, I)
                        new_chain: create IB
                        new_chain: create IB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:4A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:2, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[++---?+--], np:4, ch:6A, co:0) !
! 5  ! (N, lit:cat, ftr:[---+-?+--], up:3, dn:0,      !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:3, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I)
                    agr(PHIB, I) = True
                    new_chain(PHIB, I)
                        new_chain: create IC
                        new_chain: create IC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:4A, co:2C) !
! 2C ! (E, sub:C, ftr:[++---?+--], np:2, ch:4B, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,       !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[++---?+--], np:4, ch:6A, co:0)  !
! 5  ! (N, lit:cat, ftr:[---+-?+--], up:3, dn:0,       !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:4, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?+--], np:5, ch:0, co:0)   !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:3, dn:0,    !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, myself)
                sc(I, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, cat)
                sc(I, cat) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.27) The men took off their hats.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,     !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:their, ftr:[+--++?+-+], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--++?+-+], np:3, ch:0, co:0) !
! 4  ! (N, lit:hats, ftr:[---++?---], up:1, dn:0,    !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---++?---], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(their)
        non_refl_chaining(their)
            chaining_n_to_n(their, hats)
                sc(their, hats) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(their, men)
                sc(their, men) = True
                agr(their, men) = True
                rnr(their, men) = True
                chaining_e_to_n(theirA, men)
                    agr(theirA, men) = True
                    new_chain(theirA, men)
                        new_chain: create menB
                        new_chain: create menB^theirA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---++-+--], np:2, ch:3A, co:0) !
! 3  ! (N, lit:their, ftr:[+--++?+-+], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+--++?+-+], np:3, ch:0, co:0)  !
! 4  ! (N, lit:hats, ftr:[---++?---], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---++?---], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.51) The man who lives next door said that he would mow my lawn.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:man, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:6, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)       !
! 4  ! (N, lit:man, ftr:[---+--+--], up:3, dn:0,     !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:0, ec:0,    !
!    !  pr:0, su:0, nu:4)                            !
! 5  ! (S, up:1, dn:6, lt:3, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:2, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:my, ftr:[++---?+-+], up:5, dn:0,      !
!    !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[++---?+-+], np:7, ch:0, co:0) !
! 8  ! (N, lit:lawn, ftr:[---+-?---], up:5, dn:0,    !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[---+-?---], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(my)
        non_refl_chaining(my)
            chaining_n_to_n(my, lawn)
                sc(my, lawn) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, he)
                sc(my, he) = True
                agr(my, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, man)
                sc(my, man) = True
                agr(my, man) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, lawn)
                sc(he, lawn) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, my)
                sc(he, my) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, man)
                sc(he, man) = True
                agr(he, man) = True
                rnr(he, man) = True
                chaining_e_to_n(heA, man)
                    agr(heA, man) = True
                    new_chain(heA, man)
                        new_chain: create manB
                        new_chain: create manB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:man, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:6, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:6A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)        !
! 4  ! (N, lit:man, ftr:[---+--+--], up:3, dn:0,      !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (S, up:1, dn:6, lt:3, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:2, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:my, ftr:[++---?+-+], up:5, dn:0,       !
!    !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[++---?+-+], np:7, ch:0, co:0)  !
! 8  ! (N, lit:lawn, ftr:[---+-?---], up:5, dn:0,     !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[---+-?---], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.52) Somebody seduced Bill's sister, but no one will ever seduce Jack’s and she knows it.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,  !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,    !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)   !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,    !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:4, su:8, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,  !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,      !
!     !  pr:0, su:0, nu:7)                              !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,    !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:5, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9A,   !
!     !  pr:8, su:11, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,      !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, PHI)
                sc(she, PHI) = True
                agr(she, PHI) = True
                rnr(she, PHI) = True
                chaining_e_to_n(sheA, PHI)
                    agr(sheA, PHI) = True
                    new_chain(sheA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^sheA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,  !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,    !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)   !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,    !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:4, su:8, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,  !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,      !
!     !  pr:0, su:0, nu:7)                              !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,    !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:5, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,   !
!     !  pr:8, su:11, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)  !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0) !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,      !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, Jack's)
                sc(she, Jack's) = True
                agr(she, Jack's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, sister)
                sc(she, sister) = True
                agr(she, sister) = True
                rnr(she, sister) = True
                chaining_e_to_n(sheA, sister)
                    agr(sheA, sister) = True
                    new_chain(sheA, sister)
                        new_chain: create sisterB
                        new_chain: create sisterB^sheA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,  !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,    !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)   !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,    !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:8, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:0) !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,  !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,      !
!     !  pr:0, su:0, nu:7)                              !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,    !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:5, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,   !
!     !  pr:8, su:11, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)  !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0) !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,      !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, Bill's)
                sc(she, Bill's) = True
                agr(she, Bill's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, somebody)
                sc(she, somebody) = True
                agr(she, somebody) = True
                rnr(she, somebody) = True
                chaining_e_to_n(sheA, somebody)
                    agr(sheA, somebody) = True
                    new_chain(sheA, somebody)
                        new_chain: create somebodyB
                        new_chain: create somebodyB^sheA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,  !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:3B)  !
!  3B ! (E, sub:B, ftr:[+--+-++--], np:3, ch:11A, co:0) !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,    !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)   !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,    !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:8, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:0) !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)        !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,  !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,      !
!     !  pr:0, su:0, nu:7)                              !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,    !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:5, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,   !
!     !  pr:8, su:11, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)  !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0) !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)      !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,      !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:0, nu:11)                             !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, she)
                sc(PHI, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Jack's)
                sc(PHI, Jack's) = True
                agr(PHI, Jack's) = True
                rnr(PHI, Jack's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, sister)
                sc(PHI, sister) = True
                agr(PHI, sister) = True
                rnr(PHI, sister) = True
                chaining_e_to_n(PHIA, sister)
                    agr(PHIA, sister) = True
                    new_chain(PHIA, sister)
                        new_chain: create sisterC
                        new_chain: create sisterC^PHIA

__________________________NODES___________________________
!     !                                                  !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,   !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!     !  pr:0, su:4, nu:3)                               !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:3B)   !
!  3B ! (E, sub:B, ftr:[+--+-++--], np:3, ch:11A, co:0)  !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!     !  pr:3, su:5, nu:4)                               !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)    !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!     !  pr:4, su:8, nu:5)                               !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)   !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:5C) !
!  5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:9A, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)         !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,   !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,       !
!     !  pr:0, su:0, nu:7)                               !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,     !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!     !  pr:5, su:9, nu:8)                               !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)    !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:8, su:11, nu:9)                              !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)   !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0)  !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)       !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A,  !
!     !  pr:9, su:0, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)   !
!_____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, sister)
                    agr(PHIB, sister) = True
                    new_chain(PHIB, sister)
                        new_chain: create sisterD
                        new_chain: create sisterD^PHIB

__________________________NODES___________________________
!     !                                                  !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,   !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!     !  pr:0, su:4, nu:3)                               !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:3B)   !
!  3B ! (E, sub:B, ftr:[+--+-++--], np:3, ch:11A, co:0)  !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!     !  pr:3, su:5, nu:4)                               !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)    !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5D,     !
!     !  pr:4, su:8, nu:5)                               !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)   !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:5C) !
!  5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:9A, co:5D)  !
!  5D ! (E, sub:D, ftr:[---+-++--], np:5, ch:9B, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)         !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,   !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,       !
!     !  pr:0, su:0, nu:7)                               !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,     !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!     !  pr:5, su:9, nu:8)                               !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)    !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:8, su:11, nu:9)                              !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)   !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0)  !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)       !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A,  !
!     !  pr:9, su:0, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)   !
!_____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Bill's)
                sc(PHI, Bill's) = True
                agr(PHI, Bill's) = True
                rnr(PHI, Bill's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, somebody)
                sc(PHI, somebody) = True
                agr(PHI, somebody) = True
                rnr(PHI, somebody) = True
                chaining_e_to_n(PHIA, somebody)
                    agr(PHIA, somebody) = True
                    new_chain(PHIA, somebody)
                        new_chain: create somebodyC
                        new_chain: create somebodyC^PHIA

__________________________NODES___________________________
!     !                                                  !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,   !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,     !
!     !  pr:0, su:4, nu:3)                               !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:3B)   !
!  3B ! (E, sub:B, ftr:[+--+-++--], np:3, ch:11A, co:3C) !
!  3C ! (E, sub:C, ftr:[+--+-?+--], np:3, ch:9A, co:0)   !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!     !  pr:3, su:5, nu:4)                               !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)    !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5D,     !
!     !  pr:4, su:8, nu:5)                               !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)   !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:5C) !
!  5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:9A, co:5D)  !
!  5D ! (E, sub:D, ftr:[---+-++--], np:5, ch:9B, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)         !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,   !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,       !
!     !  pr:0, su:0, nu:7)                               !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,     !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!     !  pr:5, su:9, nu:8)                               !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)    !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:8, su:11, nu:9)                              !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)   !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0)  !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)       !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A,  !
!     !  pr:9, su:0, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)   !
!_____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, somebody)
                    agr(PHIB, somebody) = True
                    new_chain(PHIB, somebody)
                        new_chain: create somebodyD
                        new_chain: create somebodyD^PHIB

__________________________NODES___________________________
!     !                                                  !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
!  3  ! (N, lit:somebody, ftr:[+--+-?+--], up:2, dn:0,   !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3D,     !
!     !  pr:0, su:4, nu:3)                               !
!  3A ! (E, sub:A, ftr:[+--+-?+--], np:3, ch:0, co:3B)   !
!  3B ! (E, sub:B, ftr:[+--+-++--], np:3, ch:11A, co:3C) !
!  3C ! (E, sub:C, ftr:[+--+-?+--], np:3, ch:9A, co:3D)  !
!  3D ! (E, sub:D, ftr:[+--+-++--], np:3, ch:9B, co:0)   !
!  4  ! (N, lit:Bill's, ftr:[---+--+-+], up:2, dn:0,     !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!     !  pr:3, su:5, nu:4)                               !
!  4A ! (E, sub:A, ftr:[---+--+-+], np:4, ch:0, co:0)    !
!  5  ! (N, lit:sister, ftr:[---+-++--], up:2, dn:0,     !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5D,     !
!     !  pr:4, su:8, nu:5)                               !
!  5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)   !
!  5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:11A, co:5C) !
!  5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:9A, co:5D)  !
!  5D ! (E, sub:D, ftr:[---+-++--], np:5, ch:9B, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:10, th:7, nu:6)         !
!  7  ! (N, lit:somebody, ftr:[+--+-?+--], up:6, dn:0,   !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:0, ec:0,       !
!     !  pr:0, su:0, nu:7)                               !
!  8  ! (N, lit:Jack's, ftr:[---+--+-+], up:6, dn:0,     !
!     !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!     !  pr:5, su:9, nu:8)                               !
!  8A ! (E, sub:A, ftr:[---+--+-+], np:8, ch:0, co:0)    !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!     !  lt:8, rt:0, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:8, su:11, nu:9)                              !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)   !
!  9B ! (E, sub:B, ftr:[+--+-++--], np:9, ch:11A, co:0)  !
! 10  ! (S, up:1, dn:11, lt:6, rt:0, th:11, nu:10)       !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,       !
!     !  lt:0, rt:0, th:0, np:11, ch:0, co:11A, ec:11A,  !
!     !  pr:9, su:0, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)   !
!_____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(somebody)
        non_refl_chaining(somebody)
            chaining_n_to_n(somebody, she)
                sc(somebody, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(somebody, PHI)
                sc(somebody, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(somebody, Jack's)
                sc(somebody, Jack's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(somebody, sister)
                sc(somebody, sister) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(somebody, Bill's)
                sc(somebody, Bill's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.66) Realizing that he was unpopular didn't disturb Oscar.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:PHI, ftr:[+??????--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+??????--], np:3, ch:0, co:0) !
! 4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0) !
! 6  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Oscar)
                sc(he, Oscar) = True
                agr(he, Oscar) = True
                rnr(he, Oscar) = True
                chaining_e_to_n(heA, Oscar)
                    agr(heA, Oscar) = True
                    new_chain(heA, Oscar)
                        new_chain: create OscarB
                        new_chain: create OscarB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:PHI, ftr:[+??????--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+??????--], np:3, ch:0, co:0)  !
! 4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:0) !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, PHI)
                sc(he, PHI) = True
                agr(he, PHI) = True
                rnr(he, PHI) = True
                chaining_e_to_n(heA, PHI)
                    agr(heA, PHI) = True
                    new_chain(heA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:PHI, ftr:[+??????--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+??????--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[+--+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:0) !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, Oscar)
                sc(PHI, Oscar) = True
                agr(PHI, Oscar) = True
                rnr(PHI, Oscar) = True
                chaining_e_to_n(PHIA, Oscar)
                    agr(PHIA, Oscar) = True
                    new_chain(PHIA, Oscar)
                        new_chain: create OscarC
                        new_chain: create OscarC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:PHI, ftr:[+??????--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[+??????--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[+--+--+--], np:3, ch:5A, co:0)  !
! 4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,        !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)   !
! 6  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6C,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B)  !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:6C) !
! 6C ! (E, sub:C, ftr:[---+--+--], np:6, ch:3A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, Oscar)
                    agr(PHIB, Oscar) = True
                    new_chain(PHIB, Oscar)
                        new_chain: create OscarD
                        new_chain: create OscarD^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:PHI, ftr:[+??????--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[+??????--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[+--+--+--], np:3, ch:5A, co:0)  !
! 4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,        !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)   !
! 6  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6D,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B)  !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:6C) !
! 6C ! (E, sub:C, ftr:[---+--+--], np:6, ch:3A, co:6D) !
! 6D ! (E, sub:D, ftr:[---+--+--], np:6, ch:3B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, he)
                sc(PHI, he) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.70) My neighbor who is pregnant said that she was very happy.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:my, ftr:[++---?+-+], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:neighbor, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:7, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:6, th:5, nu:4)        !
! 5  ! (N, lit:neighbor, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (S, up:1, dn:7, lt:4, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:she, ftr:[+--+-++--], up:6, dn:0,      !
!    !  lt:0, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:3, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-++--], np:7, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, neighbor)
                sc(she, neighbor) = True
                agr(she, neighbor) = True
                rnr(she, neighbor) = True
                chaining_e_to_n(sheA, neighbor)
                    agr(sheA, neighbor) = True
                    new_chain(sheA, neighbor)
                        new_chain: create neighborB
                        new_chain: create neighborB^sheA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:my, ftr:[++---?+-+], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:neighbor, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:7, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:7A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:6, th:5, nu:4)        !
! 5  ! (N, lit:neighbor, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:0, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (S, up:1, dn:7, lt:4, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:she, ftr:[+--+-++--], up:6, dn:0,      !
!    !  lt:0, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:3, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-++--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, my)
                sc(she, my) = True
                agr(she, my) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(my)
        non_refl_chaining(my)
            chaining_n_to_n(my, she)
                sc(my, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(my, neighbor)
                sc(my, neighbor) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.74) The pilot who shot at it hit the Mig that chased him.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:pilot, ftr:[---+-?+--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:5, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)       !
! 4  ! (N, lit:pilot, ftr:[---+-?+--], up:3, dn:0,   !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,    !
!    !  pr:0, su:0, nu:4)                            !
! 5  ! (N, lit:it, ftr:[+--+-?---], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:2, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+-?---], np:5, ch:0, co:0) !
! 6  ! (N, lit:Mig, ftr:[---+-?---], up:1, dn:0,     !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:9, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:0) !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:Mig, ftr:[---+-?---], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,    !
!    !  pr:0, su:0, nu:8)                            !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,     !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:6, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Mig)
                sc(him, Mig) = True
                agr(him, Mig) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, it)
                sc(him, it) = True
                agr(him, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, pilot)
                sc(him, pilot) = True
                agr(him, pilot) = True
                rnr(him, pilot) = True
                chaining_e_to_n(himA, pilot)
                    agr(himA, pilot) = True
                    new_chain(himA, pilot)
                        new_chain: create pilotB
                        new_chain: create pilotB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:pilot, ftr:[---+-?+--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:9A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:pilot, ftr:[---+-?+--], up:3, dn:0,    !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:it, ftr:[+--+-?---], up:3, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+-?---], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Mig, ftr:[---+-?---], up:1, dn:0,      !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:9, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:0)  !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:Mig, ftr:[---+-?---], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:8)                             !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:6, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, him)
                sc(it, him) = True
                agr(it, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, Mig)
                sc(it, Mig) = True
                agr(it, Mig) = True
                rnr(it, Mig) = True
                chaining_e_to_n(itA, Mig)
                    agr(itA, Mig) = True
                    new_chain(itA, Mig)
                        new_chain: create MigB
                        new_chain: create MigB^itA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:pilot, ftr:[---+-?+--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:9A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:pilot, ftr:[---+-?+--], up:3, dn:0,    !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:it, ftr:[+--+-?---], up:3, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+-?---], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Mig, ftr:[---+-?---], up:1, dn:0,      !
!    !  lt:3, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:9, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:5A, co:0) !
! 7  ! (S, up:1, dn:8, lt:6, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:Mig, ftr:[---+-?---], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:8)                             !
! 9  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:6, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, pilot)
                sc(it, pilot) = True
                agr(it, pilot) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.86) The mosquito which bit Algernon was killed by him.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:mosquito, ftr:[---+-?+--], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:Algernon, ftr:[---+--+--], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,      !
!    !  lt:3, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Algernon)
                sc(him, Algernon) = True
                agr(him, Algernon) = True
                rnr(him, Algernon) = True
                chaining_e_to_n(himA, Algernon)
                    agr(himA, Algernon) = True
                    new_chain(himA, Algernon)
                        new_chain: create AlgernonB
                        new_chain: create AlgernonB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:mosquito, ftr:[---+-?+--], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:Algernon, ftr:[---+--+--], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,      !
!    !  lt:3, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, mosquito)
                sc(him, mosquito) = True
                agr(him, mosquito) = True
                rnr(him, mosquito) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.87) The mosquito which bit him was killed by Algernon.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:mosquito, ftr:[---+-?+--], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Algernon)
                sc(him, Algernon) = True
                agr(him, Algernon) = True
                rnr(him, Algernon) = True
                chaining_e_to_n(himA, Algernon)
                    agr(himA, Algernon) = True
                    new_chain(himA, Algernon)
                        new_chain: create AlgernonB
                        new_chain: create AlgernonB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:mosquito, ftr:[---+-?+--], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:0) !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, mosquito)
                sc(him, mosquito) = True
                agr(him, mosquito) = True
                rnr(him, mosquito) = True
                chaining_e_to_n(himA, mosquito)
                    agr(himA, mosquito) = True
                    new_chain(himA, mosquito)
                        new_chain: create mosquitoB
                        new_chain: create mosquitoB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:5, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:5A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)        !
! 4  ! (N, lit:mosquito, ftr:[---+-?+--], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:4)                             !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:3, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:2, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:0) !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.88) Algernon killed the mosquito which bit him.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:6, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:mosquito, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:3, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, mosquito)
                sc(him, mosquito) = True
                agr(him, mosquito) = True
                rnr(him, mosquito) = True
                chaining_e_to_n(himA, mosquito)
                    agr(himA, mosquito) = True
                    new_chain(himA, mosquito)
                        new_chain: create mosquitoB
                        new_chain: create mosquitoB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:6, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:6A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:mosquito, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:3, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Algernon)
                sc(him, Algernon) = True
                agr(him, Algernon) = True
                rnr(him, Algernon) = True
                chaining_e_to_n(himA, Algernon)
                    agr(himA, Algernon) = True
                    new_chain(himA, Algernon)
                        new_chain: create AlgernonB
                        new_chain: create AlgernonB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Algernon, ftr:[---+--+--], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:6A, co:0) !
! 3  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:6, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:6A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:mosquito, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:3, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.89) He killed the mosquito which bit Algernon.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:he, ftr:[+--+--+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[+--+--+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mosquito, ftr:[---+-?+--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:6, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-?+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:mosquito, ftr:[---+-?+--], up:4, dn:0, !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:0, ec:0,     !
!    !  pr:0, su:0, nu:5)                             !
! 6  ! (N, lit:Algernon, ftr:[---+--+--], up:4, dn:0, !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:3, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Algernon)
                sc(he, Algernon) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, mosquito)
                sc(he, mosquito) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.91) After John Adams woke up, he was hungry.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:0, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.92) That Oscar was unpopular didn't disturb him.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:Oscar, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,     !
!    !  lt:2, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Oscar)
                sc(him, Oscar) = True
                agr(him, Oscar) = True
                rnr(him, Oscar) = True
                chaining_e_to_n(himA, Oscar)
                    agr(himA, Oscar) = True
                    new_chain(himA, Oscar)
                        new_chain: create OscarB
                        new_chain: create OscarB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:Oscar, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,      !
!    !  lt:2, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.93) For your brother to refuse to pay taxes would get him into trouble.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)       !
! 3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0) !
! 4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0, !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0) !
! 5  ! (S, up:2, dn:6, lt:4, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,     !
!    !  lt:0, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:8, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0) !
! 7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:6, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+--+--], np:8, ch:0, co:0) !
! 9  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[---+-?---], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, trouble)
                sc(him, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = True
                agr(him, PHI) = True
                rnr(him, PHI) = True
                chaining_e_to_n(himA, PHI)
                    agr(himA, PHI) = True
                    new_chain(himA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)        !
! 3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)  !
! 4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,  !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:2, dn:6, lt:4, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:4, su:8, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[+--+--+--], np:6, ch:8A, co:0) !
! 7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:6, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--+--], np:8, ch:0, co:0)  !
! 9  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[---+-?---], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, brother)
                sc(him, brother) = True
                agr(him, brother) = True
                rnr(him, brother) = True
                chaining_e_to_n(himA, brother)
                    agr(himA, brother) = True
                    new_chain(himA, brother)
                        new_chain: create brotherB
                        new_chain: create brotherB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)        !
! 3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)  !
! 4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,  !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:8A, co:0) !
! 5  ! (S, up:2, dn:6, lt:4, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,   !
!    !  pr:4, su:8, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:6B) !
! 6B ! (E, sub:B, ftr:[+--+--+--], np:6, ch:8A, co:0) !
! 7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:6, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--+--], np:8, ch:0, co:0)  !
! 9  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[---+-?---], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, your)
                sc(him, your) = True
                agr(him, your) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, trouble)
                sc(PHI, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, brother)
                sc(PHI, brother) = True
                agr(PHI, brother) = True
                rnr(PHI, brother) = True
                chaining_e_to_n(PHIA, brother)
                    agr(PHIA, brother) = True
                    new_chain(PHIA, brother)
                        new_chain: create brotherC
                        new_chain: create brotherC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)         !
! 3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
! 4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:6, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:8A, co:4C) !
! 4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:6A, co:0)  !
! 5  ! (S, up:2, dn:6, lt:4, rt:0, th:6, nu:5)         !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,       !
!    !  lt:0, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!    !  pr:4, su:8, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:6B)  !
! 6B ! (E, sub:B, ftr:[+--+--+--], np:6, ch:8A, co:0)  !
! 7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:6, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+--+--+--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---+-?---], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, brother)
                    agr(PHIB, brother) = True
                    new_chain(PHIB, brother)
                        new_chain: create brotherD
                        new_chain: create brotherD^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)         !
! 3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
! 4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4D,    !
!    !  pr:3, su:6, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:8A, co:4C) !
! 4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:6A, co:4D) !
! 4D ! (E, sub:D, ftr:[---+--+--], np:4, ch:6B, co:0)  !
! 5  ! (S, up:2, dn:6, lt:4, rt:0, th:6, nu:5)         !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,       !
!    !  lt:0, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!    !  pr:4, su:8, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:6B)  !
! 6B ! (E, sub:B, ftr:[+--+--+--], np:6, ch:8A, co:0)  !
! 7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:him, ftr:[+--+--+--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:6, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+--+--+--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---+-?---], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, your)
                sc(PHI, your) = True
                agr(PHI, your) = True
                rnr(PHI, your) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(your)
        non_refl_chaining(your)
            chaining_n_to_n(your, trouble)
                sc(your, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, him)
                sc(your, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, PHI)
                sc(your, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, brother)
                sc(your, brother) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.94) Anna's complaining about Peter infuriated him.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)           !
! 3  ! (N, lit:Anna's, ftr:[---+-++-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-++-+], np:3, ch:0, co:0)     !
! 4  ! (N, lit:complaining, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)     !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,         !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Peter)
                sc(him, Peter) = True
                agr(him, Peter) = True
                rnr(him, Peter) = True
                chaining_e_to_n(himA, Peter)
                    agr(himA, Peter) = True
                    new_chain(himA, Peter)
                        new_chain: create PeterB
                        new_chain: create PeterB^himA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)           !
! 3  ! (N, lit:Anna's, ftr:[---+-++-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-++-+], np:3, ch:0, co:0)     !
! 4  ! (N, lit:complaining, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)    !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0)    !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,         !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, complaining)
                sc(him, complaining) = True
                agr(him, complaining) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Anna's)
                sc(him, Anna's) = True
                agr(him, Anna's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.95) The possibility that Fred will be unpopular doesn’t bother him.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)           !
! 4  ! (N, lit:Fred, ftr:[---+--+--], up:3, dn:0,        !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)     !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,         !
!    !  lt:3, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Fred)
                sc(him, Fred) = True
                agr(him, Fred) = True
                rnr(him, Fred) = True
                chaining_e_to_n(himA, Fred)
                    agr(himA, Fred) = True
                    new_chain(himA, Fred)
                        new_chain: create FredB
                        new_chain: create FredB^himA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)           !
! 4  ! (N, lit:Fred, ftr:[---+--+--], up:3, dn:0,        !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)    !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:5A, co:0)    !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,         !
!    !  lt:3, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, possibility)
                sc(him, possibility) = True
                agr(him, possibility) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.96) After he woke up, John Adams was hungry.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:he, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:John, ftr:[---+--+--], up:4, dn:0,    !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.97) That he was unpopular didn't disturb Oscar.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:he, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:2, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Oscar)
                sc(he, Oscar) = True
                agr(he, Oscar) = True
                rnr(he, Oscar) = True
                chaining_e_to_n(heA, Oscar)
                    agr(heA, Oscar) = True
                    new_chain(heA, Oscar)
                        new_chain: create OscarB
                        new_chain: create OscarB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:he, ftr:[+--+--+--], up:2, dn:0,       !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:0, th:0, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:3A, co:0) !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.98) For him to refuse to pay taxes would get your brother into trouble.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:5, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)   !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)         !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:3, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)   !
!  6  ! (N, lit:taxes, ftr:[---++?---], up:4, dn:0,     !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---++?---], np:6, ch:0, co:0)   !
!  7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:your, ftr:[+-+-??+-+], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+-+-??+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:brother, ftr:[---+--+--], up:7, dn:0,   !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,   !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(your)
        non_refl_chaining(your)
            chaining_n_to_n(your, trouble)
                sc(your, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, brother)
                sc(your, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, taxes)
                sc(your, taxes) = True
                agr(your, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, PHI)
                sc(your, PHI) = True
                agr(your, PHI) = True
                rnr(your, PHI) = True
                chaining_e_to_n(yourA, PHI)
                    agr(yourA, PHI) = True
                    new_chain(yourA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^yourA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:5, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)   !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)         !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:3, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+-+-??+--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:taxes, ftr:[---++?---], up:4, dn:0,     !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---++?---], np:6, ch:0, co:0)   !
!  7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:your, ftr:[+-+-??+-+], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+-+-??+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:brother, ftr:[---+--+--], up:7, dn:0,   !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,   !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(your, him)
                sc(your, him) = True
                agr(your, him) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, trouble)
                sc(PHI, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, brother)
                sc(PHI, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, your)
                sc(PHI, your) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, taxes)
                sc(PHI, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = True
                agr(PHI, him) = True
                rnr(PHI, him) = True
                chaining_e_to_n(PHIA, him)
                    agr(PHIA, him) = True
                    new_chain(PHIA, him)
                        new_chain: create himB
                        new_chain: create himB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:7, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!     !  pr:0, su:5, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:3B)  !
!  3B ! (E, sub:B, ftr:[+--+--+--], np:3, ch:5A, co:0)  !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)         !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:3, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+-+-??+--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:taxes, ftr:[---++?---], up:4, dn:0,     !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---++?---], np:6, ch:0, co:0)   !
!  7  ! (S, up:1, dn:8, lt:2, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:your, ftr:[+-+-??+-+], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+-+-??+-+], np:8, ch:0, co:0)   !
!  9  ! (N, lit:brother, ftr:[---+--+--], up:7, dn:0,   !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:trouble, ftr:[---+-?---], up:7, dn:0,   !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, him)
                    agr(PHIB, him) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, trouble)
                sc(him, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, brother)
                sc(him, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, your)
                sc(him, your) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, taxes)
                sc(him, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.99) Anna's complaining about him infuriated Peter.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)           !
! 3  ! (N, lit:Anna's, ftr:[---+-++-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-++-+], np:3, ch:0, co:0)     !
! 4  ! (N, lit:complaining, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,         !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
! 6  ! (N, lit:Peter, ftr:[---+--+--], up:1, dn:0,       !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Peter)
                sc(him, Peter) = True
                agr(him, Peter) = True
                rnr(him, Peter) = True
                chaining_e_to_n(himA, Peter)
                    agr(himA, Peter) = True
                    new_chain(himA, Peter)
                        new_chain: create PeterB
                        new_chain: create PeterB^himA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)           !
! 3  ! (N, lit:Anna's, ftr:[---+-++-+], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-++-+], np:3, ch:0, co:0)     !
! 4  ! (N, lit:complaining, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,         !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
! 6  ! (N, lit:Peter, ftr:[---+--+--], up:1, dn:0,       !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6B,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:6B)    !
! 6B ! (E, sub:B, ftr:[---+--+--], np:6, ch:5A, co:0)    !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, complaining)
                sc(him, complaining) = True
                agr(him, complaining) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Anna's)
                sc(him, Anna's) = True
                agr(him, Anna's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.100) The possibility that he will be unpopular doesn’t bother Fred.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)           !
! 4  ! (N, lit:he, ftr:[+--+--+--], up:3, dn:0,          !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0)     !
! 5  ! (N, lit:Fred, ftr:[---+--+--], up:1, dn:0,        !
!    !  lt:3, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Fred)
                sc(he, Fred) = True
                agr(he, Fred) = True
                rnr(he, Fred) = True
                chaining_e_to_n(heA, Fred)
                    agr(heA, Fred) = True
                    new_chain(heA, Fred)
                        new_chain: create FredB
                        new_chain: create FredB^heA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:5, th:4, nu:3)           !
! 4  ! (N, lit:he, ftr:[+--+--+--], up:3, dn:0,          !
!    !  lt:0, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0)     !
! 5  ! (N, lit:Fred, ftr:[---+--+--], up:1, dn:0,        !
!    !  lt:3, rt:0, th:0, np:5, ch:0, co:5A, ec:5B,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)    !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:4A, co:0)    !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, possibility)
                sc(he, possibility) = True
                agr(he, possibility) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.101) John Adams was hungry after he woke up.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,      !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:4, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:0, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:2, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,       !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:0, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.102) Oscar wasn't disturbed that he was unpopular.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:4, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)       !
! 4  ! (N, lit:he, ftr:[+--+--+--], up:3, dn:0,      !
!    !  lt:0, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:2, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Oscar)
                sc(he, Oscar) = True
                agr(he, Oscar) = True
                rnr(he, Oscar) = True
                chaining_e_to_n(heA, Oscar)
                    agr(heA, Oscar) = True
                    new_chain(heA, Oscar)
                        new_chain: create OscarB
                        new_chain: create OscarB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Oscar, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:4A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:he, ftr:[+--+--+--], up:3, dn:0,       !
!    !  lt:0, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:2, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.103) It would get your brother into trouble for him to refuse to pay taxes.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)   !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0)   !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, taxes)
                sc(PHI, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = True
                agr(PHI, him) = True
                rnr(PHI, him) = True
                chaining_e_to_n(PHIA, him)
                    agr(PHIA, him) = True
                    new_chain(PHIA, him)
                        new_chain: create himB
                        new_chain: create himB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)   !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)   !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, trouble)
                sc(PHI, trouble) = True
                agr(PHI, trouble) = True
                rnr(PHI, trouble) = True
                chaining_e_to_n(PHIA, trouble)
                    agr(PHIA, trouble) = True
                    new_chain(PHIA, trouble)
                        new_chain: create troubleB
                        new_chain: create troubleB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)   !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:9A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, brother)
                sc(PHI, brother) = True
                agr(PHI, brother) = True
                rnr(PHI, brother) = True
                chaining_e_to_n(PHIA, brother)
                    agr(PHIA, brother) = True
                    new_chain(PHIA, brother)
                        new_chain: create brotherB
                        new_chain: create brotherB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:9A, co:0)  !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:9A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, your)
                sc(PHI, your) = True
                agr(PHI, your) = True
                rnr(PHI, your) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, taxes)
                sc(him, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, trouble)
                sc(him, trouble) = True
                agr(him, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, brother)
                sc(him, brother) = True
                agr(him, brother) = True
                rnr(him, brother) = True
                chaining_e_to_n(himA, brother)
                    agr(himA, brother) = True
                    new_chain(himA, brother)
                        new_chain: create brotherC
                        new_chain: create brotherC^himA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4C,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:9A, co:4C) !
!  4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:7A, co:0)  !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:9A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(himB, brother)
                    agr(himB, brother) = True
                    new_chain(himB, brother)
                        new_chain: create brotherD
                        new_chain: create brotherD^himB

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4D,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:9A, co:4C) !
!  4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:7A, co:4D) !
!  4D ! (E, sub:D, ftr:[---+--+--], np:4, ch:7B, co:0)  !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:9A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, your)
                sc(him, your) = True
                agr(him, your) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(your)
        non_refl_chaining(your)
            chaining_n_to_n(your, taxes)
                sc(your, taxes) = True
                agr(your, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, PHI)
                sc(your, PHI) = True
                agr(your, PHI) = True
                rnr(your, PHI) = True
                chaining_e_to_n(yourA, PHI)
                    agr(yourA, PHI) = True
                    new_chain(yourA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^yourA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
!  3  ! (N, lit:your, ftr:[+-+-??+-+], up:2, dn:0,      !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+-+-??+-+], np:3, ch:0, co:0)   !
!  4  ! (N, lit:brother, ftr:[---+--+--], up:2, dn:0,   !
!     !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4D,    !
!     !  pr:3, su:5, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:9A, co:4C) !
!  4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:7A, co:4D) !
!  4D ! (E, sub:D, ftr:[---+--+--], np:4, ch:7B, co:0)  !
!  5  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:4, su:7, nu:5)                              !
!  5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:9A, co:0)  !
!  6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
!  7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,       !
!     !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:5, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:6, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:9B)  !
!  9B ! (E, sub:B, ftr:[+-+-??+--], np:9, ch:3A, co:0)  !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(your, him)
                sc(your, him) = True
                agr(your, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, trouble)
                sc(your, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, brother)
                sc(your, brother) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.104) Peter was infuriated at Anna's complaining about him.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:Peter, ftr:[---+--+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)           !
! 4  ! (N, lit:Anna's, ftr:[---+-++-+], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-++-+], np:4, ch:0, co:0)     !
! 5  ! (N, lit:complaining, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)     !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:3, dn:0,         !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, complaining)
                sc(him, complaining) = True
                agr(him, complaining) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Anna's)
                sc(him, Anna's) = True
                agr(him, Anna's) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Peter)
                sc(him, Peter) = True
                agr(him, Peter) = True
                rnr(him, Peter) = True
                chaining_e_to_n(himA, Peter)
                    agr(himA, Peter) = True
                    new_chain(himA, Peter)
                        new_chain: create PeterB
                        new_chain: create PeterB^himA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:Peter, ftr:[---+--+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B)    !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:6A, co:0)    !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)           !
! 4  ! (N, lit:Anna's, ftr:[---+-++-+], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-++-+], np:4, ch:0, co:0)     !
! 5  ! (N, lit:complaining, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)     !
! 6  ! (N, lit:him, ftr:[+--+--+--], up:3, dn:0,         !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.105) Fred isn't bothered by the possibility that he will be unpopular.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:Fred, ftr:[---+--+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)     !
! 3  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:5, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)           !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,          !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:3, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, possibility)
                sc(he, possibility) = True
                agr(he, possibility) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Fred)
                sc(he, Fred) = True
                agr(he, Fred) = True
                rnr(he, Fred) = True
                chaining_e_to_n(heA, Fred)
                    agr(heA, Fred) = True
                    new_chain(heA, Fred)
                        new_chain: create FredB
                        new_chain: create FredB^heA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:Fred, ftr:[---+--+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B)    !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:5A, co:0)    !
! 3  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:5, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)           !
! 5  ! (N, lit:he, ftr:[+--+--+--], up:4, dn:0,          !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:3, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.106) *He was hungry after John Adams woke up.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:he, ftr:[+--+--+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:4, nu:2)                            !
! 2A ! (E, sub:A, ftr:[+--+--+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)       !
! 4  ! (N, lit:John, ftr:[---+--+--], up:3, dn:0,    !
!    !  lt:0, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:2, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, John)
                sc(he, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.107) *He wasn't disturbed that Oscar was unpopular.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:he, ftr:[+--+--+--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:4, nu:2)                            !
! 2A ! (E, sub:A, ftr:[+--+--+--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)       !
! 4  ! (N, lit:Oscar, ftr:[---+--+--], up:3, dn:0,   !
!    !  lt:0, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:2, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Oscar)
                sc(he, Oscar) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.108) *It would get him into trouble for your brother to refuse to pay taxes.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:6, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)   !
!  5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
!  6  ! (N, lit:your, ftr:[+-+-??+-+], up:5, dn:0,      !
!     !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:4, su:7, nu:6)                              !
!  6A ! (E, sub:A, ftr:[+-+-??+-+], np:6, ch:0, co:0)   !
!  7  ! (N, lit:brother, ftr:[---+--+--], up:5, dn:0,   !
!     !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!     !  pr:6, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:0)   !
!  8  ! (S, up:5, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, taxes)
                sc(PHI, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, brother)
                sc(PHI, brother) = True
                agr(PHI, brother) = True
                rnr(PHI, brother) = True
                chaining_e_to_n(PHIA, brother)
                    agr(PHIA, brother) = True
                    new_chain(PHIA, brother)
                        new_chain: create brotherB
                        new_chain: create brotherB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!     !  pr:3, su:6, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)   !
!  5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
!  6  ! (N, lit:your, ftr:[+-+-??+-+], up:5, dn:0,      !
!     !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:4, su:7, nu:6)                              !
!  6A ! (E, sub:A, ftr:[+-+-??+-+], np:6, ch:0, co:0)   !
!  7  ! (N, lit:brother, ftr:[---+--+--], up:5, dn:0,   !
!     !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:6, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[---+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:5, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, your)
                sc(PHI, your) = True
                agr(PHI, your) = True
                rnr(PHI, your) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, trouble)
                sc(PHI, trouble) = True
                agr(PHI, trouble) = True
                rnr(PHI, trouble) = True
                chaining_e_to_n(PHIA, trouble)
                    agr(PHIA, trouble) = True
                    new_chain(PHIA, trouble)
                        new_chain: create troubleB
                        new_chain: create troubleB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:0)   !
!  4  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!     !  pr:3, su:6, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:9A, co:0)  !
!  5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
!  6  ! (N, lit:your, ftr:[+-+-??+-+], up:5, dn:0,      !
!     !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:4, su:7, nu:6)                              !
!  6A ! (E, sub:A, ftr:[+-+-??+-+], np:6, ch:0, co:0)   !
!  7  ! (N, lit:brother, ftr:[---+--+--], up:5, dn:0,   !
!     !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:6, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[---+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:5, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = True
                agr(PHI, him) = True
                rnr(PHI, him) = True
                chaining_e_to_n(PHIA, him)
                    agr(PHIA, him) = True
                    new_chain(PHIA, him)
                        new_chain: create himB
                        new_chain: create himB^PHIA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
!  3  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,       !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!     !  pr:0, su:4, nu:3)                              !
!  3A ! (E, sub:A, ftr:[+--+--+--], np:3, ch:0, co:3B)  !
!  3B ! (E, sub:B, ftr:[+--+--+--], np:3, ch:9A, co:0)  !
!  4  ! (N, lit:trouble, ftr:[---+-?---], up:2, dn:0,   !
!     !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!     !  pr:3, su:6, nu:4)                              !
!  4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B)  !
!  4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:9A, co:0)  !
!  5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
!  6  ! (N, lit:your, ftr:[+-+-??+-+], up:5, dn:0,      !
!     !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:4, su:7, nu:6)                              !
!  6A ! (E, sub:A, ftr:[+-+-??+-+], np:6, ch:0, co:0)   !
!  7  ! (N, lit:brother, ftr:[---+--+--], up:5, dn:0,   !
!     !  lt:6, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!     !  pr:6, su:9, nu:7)                              !
!  7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:7B)  !
!  7B ! (E, sub:B, ftr:[---+--+--], np:7, ch:9A, co:0)  !
!  8  ! (S, up:5, dn:9, lt:7, rt:0, th:9, nu:8)         !
!  9  ! (N, lit:PHI, ftr:[+??????--], up:8, dn:0,       !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:7, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+??????--], np:9, ch:0, co:0)   !
! 10  ! (N, lit:taxes, ftr:[---++?---], up:8, dn:0,     !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---++?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(your)
        non_refl_chaining(your)
            chaining_n_to_n(your, taxes)
                sc(your, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, PHI)
                sc(your, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, brother)
                sc(your, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, trouble)
                sc(your, trouble) = True
                agr(your, trouble) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(your, him)
                sc(your, him) = True
                agr(your, him) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, taxes)
                sc(him, taxes) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, brother)
                sc(him, brother) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, your)
                sc(him, your) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, trouble)
                sc(him, trouble) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.109) *He was infuriated at Anna's complaining about Peter.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:he, ftr:[+--+--+--], up:1, dn:0,          !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[+--+--+--], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)           !
! 4  ! (N, lit:Anna's, ftr:[---+-++-+], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-++-+], np:4, ch:0, co:0)     !
! 5  ! (N, lit:complaining, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:6, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)     !
! 6  ! (N, lit:Peter, ftr:[---+--+--], up:3, dn:0,       !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:5, su:0, nu:6)                                !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Peter)
                sc(he, Peter) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, complaining)
                sc(he, complaining) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Anna's)
                sc(he, Anna's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.110) *He isn't bothered by the possibility that Fred will be unpopular.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:he, ftr:[+--+--+--], up:1, dn:0,          !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[+--+--+--], np:2, ch:0, co:0)     !
! 3  ! (N, lit:possibility, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:5, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)           !
! 5  ! (N, lit:Fred, ftr:[---+--+--], up:4, dn:0,        !
!    !  lt:0, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:3, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, Fred)
                sc(he, Fred) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, possibility)
                sc(he, possibility) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.111) Penelope cursed Peter and slandered him.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0, !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = True
                agr(him, PHI) = True
                rnr(him, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Peter)
                sc(him, Peter) = True
                agr(him, Peter) = True
                rnr(him, Peter) = True
                chaining_e_to_n(himA, Peter)
                    agr(himA, Peter) = True
                    new_chain(himA, Peter)
                        new_chain: create PeterB
                        new_chain: create PeterB^himA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0, !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Penelope)
                sc(him, Penelope) = True
                agr(him, Penelope) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Peter)
                sc(PHI, Peter) = True
                agr(PHI, Peter) = True
                rnr(PHI, Peter) = True
                chaining_e_to_n(PHIA, Peter)
                    agr(PHIA, Peter) = True
                    new_chain(PHIA, Peter)
                        new_chain: create PeterC
                        new_chain: create PeterC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0,  !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:6, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:7A, co:4C) !
! 4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:6A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:4, su:7, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)   !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:6, su:0, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Penelope)
                sc(PHI, Penelope) = True
                agr(PHI, Penelope) = True
                rnr(PHI, Penelope) = True
                chaining_e_to_n(PHIA, Penelope)
                    agr(PHIA, Penelope) = True
                    new_chain(PHIA, Penelope)
                        new_chain: create PenelopeB
                        new_chain: create PenelopeB^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0,  !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:6A, co:0)  !
! 4  ! (N, lit:Peter, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:6, nu:4)                              !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:7A, co:4C) !
! 4C ! (E, sub:C, ftr:[---+--+--], np:4, ch:6A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:4, su:7, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)   !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:6, su:0, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.112) *Penelope cursed him and slandered Peter.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0, !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:Peter, ftr:[---+--+--], up:5, dn:0,    !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, Peter)
                sc(PHI, Peter) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, him)
                sc(PHI, him) = True
                agr(PHI, him) = True
                rnr(PHI, him) = True
                chaining_e_to_n(PHIA, him)
                    agr(PHIA, him) = True
                    new_chain(PHIA, him)
                        new_chain: create himB
                        new_chain: create himB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0, !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+--+--+--], np:4, ch:6A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:Peter, ftr:[---+--+--], up:5, dn:0,    !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Penelope)
                sc(PHI, Penelope) = True
                agr(PHI, Penelope) = True
                rnr(PHI, Penelope) = True
                chaining_e_to_n(PHIA, Penelope)
                    agr(PHIA, Penelope) = True
                    new_chain(PHIA, Penelope)
                        new_chain: create PenelopeB
                        new_chain: create PenelopeB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Penelope, ftr:[---+-++--], up:2, dn:0, !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:6A, co:0) !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+--+--+--], np:4, ch:6A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:PHI, ftr:[+??????--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+??????--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:Peter, ftr:[---+--+--], up:5, dn:0,    !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[---+--+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Peter)
                sc(him, Peter) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, PHI)
                sc(him, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Penelope)
                sc(him, Penelope) = True
                agr(him, Penelope) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (1.113) The interest in visiting Las Vegas that Mary displayed is typical of gamblers.
#
################################################################

chaining
    init_table

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)   !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)   !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:0)   !
!____!_________________________________________________!

    init_table: exiting
    chaining_n(PHI2)
        non_refl_chaining(PHI2)
            chaining_n_to_n(PHI2, gamblers)
                sc(PHI2, gamblers) = True
                agr(PHI2, gamblers) = True
                rnr(PHI2, gamblers) = True
                chaining_e_to_n(PHI2A, gamblers)
                    agr(PHI2A, gamblers) = True
                    new_chain(PHI2A, gamblers)
                        new_chain: create gamblersB
                        new_chain: create gamblersB^PHI2A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)   !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:0)   !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9B,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, Mary)
                sc(PHI2, Mary) = True
                agr(PHI2, Mary) = True
                rnr(PHI2, Mary) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, Las Vegas)
                sc(PHI2, Las Vegas) = True
                agr(PHI2, Las Vegas) = True
                rnr(PHI2, Las Vegas) = True
                chaining_e_to_n(PHI2A, Las Vegas)
                    agr(PHI2A, Las Vegas) = True
                    new_chain(PHI2A, Las Vegas)
                        new_chain: create Las VegasB
                        new_chain: create Las VegasB^PHI2A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)   !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9B,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, PHI1)
                sc(PHI2, PHI1) = True
                agr(PHI2, PHI1) = True
                rnr(PHI2, PHI1) = True
                chaining_e_to_n(PHI2A, PHI1)
                    agr(PHI2A, PHI1) = True
                    new_chain(PHI2A, PHI1)
                        new_chain: create PHI1B
                        new_chain: create PHI1B^PHI2A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:0)   !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9B,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, interest)
                sc(PHI2, interest) = True
                agr(PHI2, interest) = True
                rnr(PHI2, interest) = True
                chaining_e_to_n(PHI2A, interest)
                    agr(PHI2A, interest) = True
                    new_chain(PHI2A, interest)
                        new_chain: create interestB
                        new_chain: create interestB^PHI2A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9B,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI1)
        non_refl_chaining(PHI1)
            chaining_n_to_n(PHI1, gamblers)
                sc(PHI1, gamblers) = True
                agr(PHI1, gamblers) = True
                rnr(PHI1, gamblers) = True
                chaining_e_to_n(PHI1A, gamblers)
                    agr(PHI1A, gamblers) = True
                    new_chain(PHI1A, gamblers)
                        new_chain: create gamblersC
                        new_chain: create gamblersC^PHI1A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9C,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1B, gamblers)
                    agr(PHI1B, gamblers) = True
                    new_chain(PHI1B, gamblers)
                        new_chain: create gamblersD
                        new_chain: create gamblersD^PHI1B

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, PHI2)
                sc(PHI1, PHI2) = True
                agr(PHI1, PHI2) = True
                rnr(PHI1, PHI2) = True
                chaining_e_to_n(PHI1A, PHI2)
                    agr(PHI1A, PHI2) = True
                    new_chain(PHI1A, PHI2)
                        new_chain: create PHI2B
                        new_chain: create PHI2B^PHI1A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1B, PHI2)
                    agr(PHI1B, PHI2) = True
                    new_chain(PHI1B, PHI2)
                        new_chain: create PHI2C
                        new_chain: create PHI2C^PHI1B

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8C,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:8C) !
! 8C ! (E, sub:C, ftr:[+??????--], np:8, ch:4B, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, Mary)
                sc(PHI1, Mary) = True
                agr(PHI1, Mary) = True
                rnr(PHI1, Mary) = True
                chaining_e_to_n(PHI1A, Mary)
                    agr(PHI1A, Mary) = True
                    new_chain(PHI1A, Mary)
                        new_chain: create MaryB
                        new_chain: create MaryB^PHI1A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[---+-++--], np:7, ch:4A, co:0)  !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8C,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:8C) !
! 8C ! (E, sub:C, ftr:[+??????--], np:8, ch:4B, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1B, Mary)
                    agr(PHI1B, Mary) = True
                    new_chain(PHI1B, Mary)
                        new_chain: create MaryC
                        new_chain: create MaryC^PHI1B

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7C,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[---+-++--], np:7, ch:4A, co:7C) !
! 7C ! (E, sub:C, ftr:[---+-++--], np:7, ch:4B, co:0)  !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8C,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:8C) !
! 8C ! (E, sub:C, ftr:[+??????--], np:8, ch:4B, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, Las Vegas)
                sc(PHI1, Las Vegas) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, interest)
                sc(PHI1, interest) = True
                agr(PHI1, interest) = True
                rnr(PHI1, interest) = True
                chaining_e_to_n(PHI1A, interest)
                    agr(PHI1A, interest) = True
                    new_chain(PHI1A, interest)
                        new_chain: create interestC
                        new_chain: create interestC^PHI1A

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:2C) !
! 2C ! (E, sub:C, ftr:[---+-?---], np:2, ch:4A, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7C,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[---+-++--], np:7, ch:4A, co:7C) !
! 7C ! (E, sub:C, ftr:[---+-++--], np:7, ch:4B, co:0)  !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8C,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:8C) !
! 8C ! (E, sub:C, ftr:[+??????--], np:8, ch:4B, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1B, interest)
                    agr(PHI1B, interest) = True
                    new_chain(PHI1B, interest)
                        new_chain: create interestD
                        new_chain: create interestD^PHI1B

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:interest, ftr:[---+-?---], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2D,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[---+-?---], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[---+-?---], np:2, ch:8A, co:2C) !
! 2C ! (E, sub:C, ftr:[---+-?---], np:2, ch:4A, co:2D) !
! 2D ! (E, sub:D, ftr:[---+-?---], np:2, ch:4B, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:6, th:4, nu:3)         !
! 4  ! (N, lit:PHI1, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+??????--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Las Vegas, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-?---], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-?---], np:5, ch:8A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:3, rt:9, th:7, nu:6)         !
! 7  ! (N, lit:Mary, ftr:[---+-++--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7C,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[---+-++--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[---+-++--], np:7, ch:4A, co:7C) !
! 7C ! (E, sub:C, ftr:[---+-++--], np:7, ch:4B, co:0)  !
! 8  ! (N, lit:PHI2, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:7, rt:0, th:9, np:8, ch:0, co:8A, ec:8C,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+??????--], np:8, ch:4A, co:8C) !
! 8C ! (E, sub:C, ftr:[+??????--], np:8, ch:4B, co:0)  !
! 9  ! (N, lit:gamblers, ftr:[---++?+--], up:1, dn:0,  !
!    !  lt:6, rt:0, th:0, np:9, ch:0, co:9A, ec:9D,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[---++?+--], np:9, ch:0, co:9B)  !
! 9B ! (E, sub:B, ftr:[---++?+--], np:9, ch:8A, co:9C) !
! 9C ! (E, sub:C, ftr:[---++?+--], np:9, ch:4A, co:9D) !
! 9D ! (E, sub:D, ftr:[---++?+--], np:9, ch:4B, co:0)  !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (5.2) June hates flowers, but she waters them anyway.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:June, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:flowers, ftr:[---++?---], up:2, dn:0, !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---++?---], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:she, ftr:[+--+-++--], up:5, dn:0,     !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+-++--], np:6, ch:0, co:0) !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,    !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, she)
                sc(them, she) = True
                agr(them, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, flowers)
                sc(them, flowers) = True
                agr(them, flowers) = True
                rnr(them, flowers) = True
                chaining_e_to_n(themA, flowers)
                    agr(themA, flowers) = True
                    new_chain(themA, flowers)
                        new_chain: create flowersB
                        new_chain: create flowersB^themA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:June, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:flowers, ftr:[---++?---], up:2, dn:0,  !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---++?---], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---++?---], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:she, ftr:[+--+-++--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+-++--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,     !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(them, June)
                sc(them, June) = True
                agr(them, June) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, them)
                sc(she, them) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, flowers)
                sc(she, flowers) = True
                agr(she, flowers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, June)
                sc(she, June) = True
                agr(she, June) = True
                rnr(she, June) = True
                chaining_e_to_n(sheA, June)
                    agr(sheA, June) = True
                    new_chain(sheA, June)
                        new_chain: create JuneB
                        new_chain: create JuneB^sheA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:June, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:6A, co:0) !
! 4  ! (N, lit:flowers, ftr:[---++?---], up:2, dn:0,  !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---++?---], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---++?---], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:she, ftr:[+--+-++--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+-++--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,     !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (8.1) John wants to give June a present, but he isn't sure she’ll like it.
#
################################################################

chaining
    init_table

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7A,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:0)     !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, she)
                sc(it, she) = True
                agr(it, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, he)
                sc(it, he) = True
                agr(it, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, present)
                sc(it, present) = True
                agr(it, present) = True
                rnr(it, present) = True
                chaining_e_to_n(itA, present)
                    agr(itA, present) = True
                    new_chain(itA, present)
                        new_chain: create presentB
                        new_chain: create presentB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, June)
                sc(it, June) = True
                agr(it, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI)
                sc(it, PHI) = True
                agr(it, PHI) = True
                rnr(it, PHI) = True
                chaining_e_to_n(itA, PHI)
                    agr(itA, PHI) = True
                    new_chain(itA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, John)
                sc(it, John) = True
                agr(it, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, it)
                sc(she, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, he)
                sc(she, he) = True
                agr(she, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, present)
                sc(she, present) = True
                agr(she, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, June)
                sc(she, June) = True
                agr(she, June) = True
                rnr(she, June) = True
                chaining_e_to_n(sheA, June)
                    agr(sheA, June) = True
                    new_chain(sheA, June)
                        new_chain: create JuneB
                        new_chain: create JuneB^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, PHI)
                sc(she, PHI) = True
                agr(she, PHI) = True
                rnr(she, PHI) = True
                chaining_e_to_n(sheA, PHI)
                    agr(sheA, PHI) = True
                    new_chain(sheA, PHI)
                        new_chain: create PHIC
                        new_chain: create PHIC^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, John)
                sc(she, John) = True
                agr(she, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, it)
                sc(he, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, she)
                sc(he, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, present)
                sc(he, present) = True
                agr(he, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, June)
                sc(he, June) = True
                agr(he, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, PHI)
                sc(he, PHI) = True
                agr(he, PHI) = True
                rnr(he, PHI) = True
                chaining_e_to_n(heA, PHI)
                    agr(heA, PHI) = True
                    new_chain(heA, PHI)
                        new_chain: create PHID
                        new_chain: create PHID^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, it)
                sc(PHI, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, she)
                sc(PHI, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, he)
                sc(PHI, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, present)
                sc(PHI, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, June)
                sc(PHI, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHIA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIC, John)
                    agr(PHIC, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHID, John)
                    agr(PHID, John) = True
                    new_chain(PHID, John)
                        new_chain: create JohnD
                        new_chain: create JohnD^PHID

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3D,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:3D)   !
!  3D ! (E, sub:D, ftr:[---+--+--], np:3, ch:5D, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.1) John wants to give June a present, but he isn't sure she’ll like it.
#
################################################################

chaining
    init_table

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7A,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:0)     !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, she)
                sc(it, she) = True
                agr(it, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, he)
                sc(it, he) = True
                agr(it, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, present)
                sc(it, present) = True
                agr(it, present) = True
                rnr(it, present) = True
                chaining_e_to_n(itA, present)
                    agr(itA, present) = True
                    new_chain(itA, present)
                        new_chain: create presentB
                        new_chain: create presentB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, June)
                sc(it, June) = True
                agr(it, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI)
                sc(it, PHI) = True
                agr(it, PHI) = True
                rnr(it, PHI) = True
                chaining_e_to_n(itA, PHI)
                    agr(itA, PHI) = True
                    new_chain(itA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, John)
                sc(it, John) = True
                agr(it, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, it)
                sc(she, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, he)
                sc(she, he) = True
                agr(she, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, present)
                sc(she, present) = True
                agr(she, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, June)
                sc(she, June) = True
                agr(she, June) = True
                rnr(she, June) = True
                chaining_e_to_n(sheA, June)
                    agr(sheA, June) = True
                    new_chain(sheA, June)
                        new_chain: create JuneB
                        new_chain: create JuneB^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, PHI)
                sc(she, PHI) = True
                agr(she, PHI) = True
                rnr(she, PHI) = True
                chaining_e_to_n(sheA, PHI)
                    agr(sheA, PHI) = True
                    new_chain(sheA, PHI)
                        new_chain: create PHIC
                        new_chain: create PHIC^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, John)
                sc(she, John) = True
                agr(she, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, it)
                sc(he, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, she)
                sc(he, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, present)
                sc(he, present) = True
                agr(he, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, June)
                sc(he, June) = True
                agr(he, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, PHI)
                sc(he, PHI) = True
                agr(he, PHI) = True
                rnr(he, PHI) = True
                chaining_e_to_n(heA, PHI)
                    agr(heA, PHI) = True
                    new_chain(heA, PHI)
                        new_chain: create PHID
                        new_chain: create PHID^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, it)
                sc(PHI, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, she)
                sc(PHI, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, he)
                sc(PHI, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, present)
                sc(PHI, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, June)
                sc(PHI, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHIA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIC, John)
                    agr(PHIC, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHID, John)
                    agr(PHID, John) = True
                    new_chain(PHID, John)
                        new_chain: create JohnD
                        new_chain: create JohnD^PHID

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3D,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:3D)   !
!  3D ! (E, sub:D, ftr:[---+--+--], np:3, ch:5D, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.2) Janet saw herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Janet, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0) !
! 3  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:0, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+-+++-], np:3, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: Janet
            chaining_n_to_n(herself, Janet)
                sc(herself, Janet) = True
                agr(herself, Janet) = True
                rnr(herself, Janet) = True
                chaining_e_to_n(herselfA, Janet)
                    agr(herselfA, Janet) = True
                    new_chain(herselfA, Janet)
                        new_chain: create JanetB
                        new_chain: create JanetB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Janet, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+-++--], np:2, ch:3A, co:0) !
! 3  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0,  !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:0, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+--+-+++-], np:3, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(Janet)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.3) Janet saw her.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Janet, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0) !
! 3  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,     !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:0, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+-++-?], np:3, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, Janet)
                sc(her, Janet) = True
                agr(her, Janet) = True
                rnr(her, Janet) = True
                chaining_e_to_n(herA, Janet)
                    agr(herA, Janet) = True
                    new_chain(herA, Janet)
                        new_chain: create JanetB
                        new_chain: create JanetB^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Janet, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+-++--], np:2, ch:3A, co:0) !
! 3  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,      !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:0, nu:3)                             !
! 3A ! (E, sub:A, ftr:[+--+-++-?], np:3, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.4) *Janet saw himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Janet, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0) !
! 3  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0, !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:0, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--++-], np:3, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: Janet
            chaining_n_to_n(himself, Janet)
                sc(himself, Janet) = True
                agr(himself, Janet) = False
            chaining_n_to_n: exiting
            simplex_pred(Janet)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.5) The men threw a smokescreen around themselves.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:0)     !
! 3  ! (N, lit:smokescreen, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (N, lit:themselves, ftr:[+--++??+-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:0, nu:4)                                !
! 4A ! (E, sub:A, ftr:[+--++??+-], np:4, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: smokescreen
            chaining_n_to_n(themselves, smokescreen)
                sc(themselves, smokescreen) = True
                agr(themselves, smokescreen) = False
            chaining_n_to_n: exiting
            simplex_pred(smokescreen)
            simplex_pred: men
            chaining_n_to_n(themselves, men)
                sc(themselves, men) = True
                agr(themselves, men) = True
                rnr(themselves, men) = True
                chaining_e_to_n(themselvesA, men)
                    agr(themselvesA, men) = True
                    new_chain(themselvesA, men)
                        new_chain: create menB
                        new_chain: create menB^themselvesA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:2B)    !
! 2B ! (E, sub:B, ftr:[---++-+--], np:2, ch:4A, co:0)    !
! 3  ! (N, lit:smokescreen, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (N, lit:themselves, ftr:[+--++??+-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:0, nu:4)                                !
! 4A ! (E, sub:A, ftr:[+--++??+-], np:4, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(men)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.6) The men found a smokescreen around them.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:3, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:0)     !
! 3  ! (N, lit:smokescreen, ftr:[---+-?---], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:2, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---+-?---], np:3, ch:0, co:0)     !
! 4  ! (N, lit:them, ftr:[+--++??--], up:1, dn:0,        !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:0, nu:4)                                !
! 4A ! (E, sub:A, ftr:[+--++??--], np:4, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, smokescreen)
                sc(them, smokescreen) = True
                agr(them, smokescreen) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, men)
                sc(them, men) = True
                agr(them, men) = True
                rnr(them, men) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.7) The men found a smokescreen to be around them.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:0)     !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)           !
! 4  ! (N, lit:smokescreen, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:them, ftr:[+--++??--], up:3, dn:0,        !
!    !  lt:4, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--++??--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, smokescreen)
                sc(them, smokescreen) = True
                agr(them, smokescreen) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, men)
                sc(them, men) = True
                agr(them, men) = True
                rnr(them, men) = True
                chaining_e_to_n(themA, men)
                    agr(themA, men) = True
                    new_chain(themA, men)
                        new_chain: create menB
                        new_chain: create menB^themA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (N, lit:men, ftr:[---++-+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,      !
!    !  pr:0, su:4, nu:2)                                !
! 2A ! (E, sub:A, ftr:[---++-+--], np:2, ch:0, co:2B)    !
! 2B ! (E, sub:B, ftr:[---++-+--], np:2, ch:5A, co:0)    !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)           !
! 4  ! (N, lit:smokescreen, ftr:[---+-?---], up:3, dn:0, !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:2, su:5, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (N, lit:them, ftr:[+--++??--], up:3, dn:0,        !
!    !  lt:4, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,      !
!    !  pr:4, su:0, nu:5)                                !
! 5A ! (E, sub:A, ftr:[+--++??--], np:5, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.8) The men found a smokescreen and it was around them.
#
################################################################

chaining
    init_table

__________________________NODES___________________________
!    !                                                   !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)           !
! 3  ! (N, lit:men, ftr:[---++-+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---++-+--], np:3, ch:0, co:0)     !
! 4  ! (N, lit:smokescreen, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:6, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)           !
! 6  ! (N, lit:it, ftr:[+--+-?---], up:5, dn:0,          !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:4, su:7, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+-?---], np:6, ch:0, co:0)     !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,        !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,      !
!    !  pr:6, su:0, nu:7)                                !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)     !
!____!___________________________________________________!

    init_table: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, it)
                sc(them, it) = True
                agr(them, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, smokescreen)
                sc(them, smokescreen) = True
                agr(them, smokescreen) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, men)
                sc(them, men) = True
                agr(them, men) = True
                rnr(them, men) = True
                chaining_e_to_n(themA, men)
                    agr(themA, men) = True
                    new_chain(themA, men)
                        new_chain: create menB
                        new_chain: create menB^themA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)           !
! 3  ! (N, lit:men, ftr:[---++-+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---++-+--], np:3, ch:0, co:3B)    !
! 3B ! (E, sub:B, ftr:[---++-+--], np:3, ch:7A, co:0)    !
! 4  ! (N, lit:smokescreen, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,      !
!    !  pr:3, su:6, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0)     !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)           !
! 6  ! (N, lit:it, ftr:[+--+-?---], up:5, dn:0,          !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:4, su:7, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+-?---], np:6, ch:0, co:0)     !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,        !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,      !
!    !  pr:6, su:0, nu:7)                                !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, them)
                sc(it, them) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, smokescreen)
                sc(it, smokescreen) = True
                agr(it, smokescreen) = True
                rnr(it, smokescreen) = True
                chaining_e_to_n(itA, smokescreen)
                    agr(itA, smokescreen) = True
                    new_chain(itA, smokescreen)
                        new_chain: create smokescreenB
                        new_chain: create smokescreenB^itA

__________________________NODES___________________________
!    !                                                   !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)           !
! 3  ! (N, lit:men, ftr:[---++-+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!    !  pr:0, su:4, nu:3)                                !
! 3A ! (E, sub:A, ftr:[---++-+--], np:3, ch:0, co:3B)    !
! 3B ! (E, sub:B, ftr:[---++-+--], np:3, ch:7A, co:0)    !
! 4  ! (N, lit:smokescreen, ftr:[---+-?---], up:2, dn:0, !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,      !
!    !  pr:3, su:6, nu:4)                                !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B)    !
! 4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:6A, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)           !
! 6  ! (N, lit:it, ftr:[+--+-?---], up:5, dn:0,          !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!    !  pr:4, su:7, nu:6)                                !
! 6A ! (E, sub:A, ftr:[+--+-?---], np:6, ch:0, co:0)     !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,        !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,      !
!    !  pr:6, su:0, nu:7)                                !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)     !
!____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, men)
                sc(it, men) = True
                agr(it, men) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.9) I told John to protect himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,     !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:4, dn:0, !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[+--+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:4, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[+--+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:4, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = True
                    new_chain(PHIB, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!    !  pr:0, su:3, nu:2)                              !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)   !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:2, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:3C) !
! 3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5B, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[+--+--+--], np:5, ch:6A, co:0)  !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:4, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = True
                chaining_e_to_n(PHIA, I)
                    agr(PHIA, I) = True
                    new_chain(PHIA, I)
                        new_chain: create IB
                        new_chain: create IB^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!    !  pr:0, su:3, nu:2)                              !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:5A, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:2, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:3C) !
! 3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5B, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[+--+--+--], np:5, ch:6A, co:0)  !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:4, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I)
                    agr(PHIB, I) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, himself)
                sc(I, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, John)
                sc(I, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.10) I told John to protect me.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,     !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0) !
! 6  ! (N, lit:me, ftr:[++---?+--], up:4, dn:0,      !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[++---?+--], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(me)
        non_refl_chaining(me)
            chaining_n_to_n(me, PHI)
                sc(me, PHI) = True
                agr(me, PHI) = True
                rnr(me, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, John)
                sc(me, John) = True
                agr(me, John) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, I)
                sc(me, I) = True
                agr(me, I) = True
                rnr(me, I) = True
                chaining_e_to_n(meA, I)
                    agr(meA, I) = True
                    new_chain(meA, I)
                        new_chain: create IB
                        new_chain: create IB^meA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:6A, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:me, ftr:[++---?+--], up:4, dn:0,       !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, me)
                sc(PHI, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:6A, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)  !
! 6  ! (N, lit:me, ftr:[++---?+--], up:4, dn:0,       !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = True
                chaining_e_to_n(PHIA, I)
                    agr(PHIA, I) = True
                    new_chain(PHIA, I)
                        new_chain: create IC
                        new_chain: create IC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!    !  pr:0, su:3, nu:2)                              !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:6A, co:2C) !
! 2C ! (E, sub:C, ftr:[++---?+--], np:2, ch:5A, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:2, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)   !
! 6  ! (N, lit:me, ftr:[++---?+--], up:4, dn:0,        !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[++---?+--], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, me)
                sc(I, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, John)
                sc(I, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (10.11) I told John to protect myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:5, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)       !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,     !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:3, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0) !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:4, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: PHI
            chaining_n_to_n(myself, PHI)
                sc(myself, PHI) = True
                agr(myself, PHI) = True
                rnr(myself, PHI) = True
                chaining_e_to_n(myselfA, PHI)
                    agr(myselfA, PHI) = True
                    new_chain(myselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[++---?+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:4, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, myself)
                sc(PHI, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[++---?+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:4, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I)
                sc(PHI, I) = True
                agr(PHI, I) = True
                rnr(PHI, I) = True
                chaining_e_to_n(PHIA, I)
                    agr(PHIA, I) = True
                    new_chain(PHIA, I)
                        new_chain: create IB
                        new_chain: create IB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,        !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:5A, co:0) !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:5, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0) !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)        !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,      !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:3, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[++---?+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:4, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I)
                    agr(PHIB, I) = True
                    new_chain(PHIB, I)
                        new_chain: create IC
                        new_chain: create IC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:I, ftr:[++---?+--], up:1, dn:0,         !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!    !  pr:0, su:3, nu:2)                              !
! 2A ! (E, sub:A, ftr:[++---?+--], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[++---?+--], np:2, ch:5A, co:2C) !
! 2C ! (E, sub:C, ftr:[++---?+--], np:2, ch:5B, co:0)  !
! 3  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:2, su:5, nu:3)                              !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:5A, co:0)  !
! 4  ! (S, up:1, dn:5, lt:3, rt:0, th:5, nu:4)         !
! 5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,       !
!    !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:3, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[++---?+--], np:5, ch:6A, co:0)  !
! 6  ! (N, lit:myself, ftr:[++---?++-], up:4, dn:0,    !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[++---?++-], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I)
        non_refl_chaining(I)
            chaining_n_to_n(I, myself)
                sc(I, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, PHI)
                sc(I, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I, John)
                sc(I, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.12) Jack's house burned down, but he rebuilt it.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:Jack's, ftr:[---+--+-+], up:2, dn:0,  !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+-+], np:3, ch:0, co:0) !
! 4  ! (N, lit:house, ftr:[---+-?---], up:2, dn:0,   !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:it, ftr:[+--+-?---], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--+-?---], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, he)
                sc(it, he) = True
                agr(it, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, house)
                sc(it, house) = True
                agr(it, house) = True
                rnr(it, house) = True
                chaining_e_to_n(itA, house)
                    agr(itA, house) = True
                    new_chain(itA, house)
                        new_chain: create houseB
                        new_chain: create houseB^itA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Jack's, ftr:[---+--+-+], up:2, dn:0,   !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+-+], np:3, ch:0, co:0)  !
! 4  ! (N, lit:house, ftr:[---+-?---], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:it, ftr:[+--+-?---], up:5, dn:0,       !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-?---], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, Jack's)
                sc(it, Jack's) = True
                agr(it, Jack's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, it)
                sc(he, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, house)
                sc(he, house) = True
                agr(he, house) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Jack's)
                sc(he, Jack's) = True
                agr(he, Jack's) = True
                rnr(he, Jack's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.26) John owns some sheep and Harry vaccinates them.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:sheep, ftr:[---+??+--], up:2, dn:0,   !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:Harry, ftr:[---+--+--], up:5, dn:0,   !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,    !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, Harry)
                sc(them, Harry) = True
                agr(them, Harry) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, sheep)
                sc(them, sheep) = True
                agr(them, sheep) = True
                rnr(them, sheep) = True
                chaining_e_to_n(themA, sheep)
                    agr(themA, sheep) = True
                    new_chain(themA, sheep)
                        new_chain: create sheepB
                        new_chain: create sheepB^themA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:sheep, ftr:[---+??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---++?+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:Harry, ftr:[---+--+--], up:5, dn:0,    !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:them, ftr:[+--++??--], up:5, dn:0,     !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(them, John)
                sc(them, John) = True
                agr(them, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.27) Mary danced with many boys and they found her interesting.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:boys, ftr:[---++-+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---++-+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:they, ftr:[+--++?+--], up:5, dn:0,    !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--++?+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:her, ftr:[+--+-++-?], up:5, dn:0,     !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--+-++-?], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, they)
                sc(her, they) = True
                agr(her, they) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, boys)
                sc(her, boys) = True
                agr(her, boys) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, Mary)
                sc(her, Mary) = True
                agr(her, Mary) = True
                rnr(her, Mary) = True
                chaining_e_to_n(herA, Mary)
                    agr(herA, Mary) = True
                    new_chain(herA, Mary)
                        new_chain: create MaryB
                        new_chain: create MaryB^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:boys, ftr:[---++-+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---++-+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:they, ftr:[+--++?+--], up:5, dn:0,     !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--++?+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:her, ftr:[+--+-++-?], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-++-?], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(they)
        non_refl_chaining(they)
            chaining_n_to_n(they, her)
                sc(they, her) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(they, boys)
                sc(they, boys) = True
                agr(they, boys) = True
                rnr(they, boys) = True
                chaining_e_to_n(theyA, boys)
                    agr(theyA, boys) = True
                    new_chain(theyA, boys)
                        new_chain: create boysB
                        new_chain: create boysB^theyA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:boys, ftr:[---++-+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---++-+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---++-+--], np:4, ch:6A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:they, ftr:[+--++?+--], up:5, dn:0,     !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--++?+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:her, ftr:[+--+-++-?], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-++-?], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(they, Mary)
                sc(they, Mary) = True
                agr(they, Mary) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.28) John lost a pen yesterday and Bill found one today.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:pen, ftr:[---+-?---], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:Bill, ftr:[---+--+--], up:5, dn:0,    !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:one, ftr:[+--+-??--], up:5, dn:0,     !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--+-??--], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(one)
        non_refl_chaining(one)
            chaining_n_to_n(one, Bill)
                sc(one, Bill) = True
                agr(one, Bill) = True
                rnr(one, Bill) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(one, pen)
                sc(one, pen) = True
                agr(one, pen) = True
                rnr(one, pen) = True
                chaining_e_to_n(oneA, pen)
                    agr(oneA, pen) = True
                    new_chain(oneA, pen)
                        new_chain: create penB
                        new_chain: create penB^oneA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:pen, ftr:[---+-?---], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:Bill, ftr:[---+--+--], up:5, dn:0,     !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:one, ftr:[+--+-??--], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-??--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(one, John)
                sc(one, John) = True
                agr(one, John) = True
                rnr(one, John) = True
                chaining_e_to_n(oneA, John)
                    agr(oneA, John) = True
                    new_chain(oneA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^oneA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:pen, ftr:[---+-?---], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+-?---], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+-?---], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:Bill, ftr:[---+--+--], up:5, dn:0,     !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:one, ftr:[+--+-??--], up:5, dn:0,      !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-??--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.29) John claimed to have found the solution to the problem, but Bill was sure he had found it.
#
################################################################

chaining
    init_table

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:0)     !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7A,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:0)     !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, he)
                sc(it, he) = True
                agr(it, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, Bill)
                sc(it, Bill) = True
                agr(it, Bill) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, problem)
                sc(it, problem) = True
                agr(it, problem) = True
                rnr(it, problem) = True
                chaining_e_to_n(itA, problem)
                    agr(itA, problem) = True
                    new_chain(itA, problem)
                        new_chain: create problemB
                        new_chain: create problemB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:0)     !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, solution)
                sc(it, solution) = True
                agr(it, solution) = True
                rnr(it, solution) = True
                chaining_e_to_n(itA, solution)
                    agr(itA, solution) = True
                    new_chain(itA, solution)
                        new_chain: create solutionB
                        new_chain: create solutionB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI)
                sc(it, PHI) = True
                agr(it, PHI) = True
                rnr(it, PHI) = True
                chaining_e_to_n(itA, PHI)
                    agr(itA, PHI) = True
                    new_chain(itA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, John)
                sc(it, John) = True
                agr(it, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, it)
                sc(he, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Bill)
                sc(he, Bill) = True
                agr(he, Bill) = True
                rnr(he, Bill) = True
                chaining_e_to_n(heA, Bill)
                    agr(heA, Bill) = True
                    new_chain(heA, Bill)
                        new_chain: create BillB
                        new_chain: create BillB^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:9B)    !
!  9B ! (E, sub:B, ftr:[---+--+--], np:9, ch:11A, co:0)   !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, problem)
                sc(he, problem) = True
                agr(he, problem) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, solution)
                sc(he, solution) = True
                agr(he, solution) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, PHI)
                sc(he, PHI) = True
                agr(he, PHI) = True
                rnr(he, PHI) = True
                chaining_e_to_n(heA, PHI)
                    agr(heA, PHI) = True
                    new_chain(heA, PHI)
                        new_chain: create PHIC
                        new_chain: create PHIC^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+--+--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:9B)    !
!  9B ! (E, sub:B, ftr:[---+--+--], np:9, ch:11A, co:0)   !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:11A, co:0)   !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+--+--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:9B)    !
!  9B ! (E, sub:B, ftr:[---+--+--], np:9, ch:11A, co:0)   !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, it)
                sc(PHI, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, he)
                sc(PHI, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Bill)
                sc(PHI, Bill) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, problem)
                sc(PHI, problem) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, solution)
                sc(PHI, solution) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHIA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:11A, co:3C)  !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+--+--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:9B)    !
!  9B ! (E, sub:B, ftr:[---+--+--], np:9, ch:11A, co:0)   !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIC, John)
                    agr(PHIC, John) = True
                    new_chain(PHIC, John)
                        new_chain: create JohnD
                        new_chain: create JohnD^PHIC

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3D,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:11A, co:3C)  !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:3D)   !
!  3D ! (E, sub:D, ftr:[---+--+--], np:3, ch:5C, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+--+--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:solution, ftr:[---+-?---], up:4, dn:0,    !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-?---], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-?---], np:6, ch:12A, co:0)   !
!  7  ! (N, lit:problem, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:Bill, ftr:[---+--+--], up:8, dn:0,        !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9B,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[---+--+--], np:9, ch:0, co:9B)    !
!  9B ! (E, sub:B, ftr:[---+--+--], np:9, ch:11A, co:0)   !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:he, ftr:[+--+--+--], up:10, dn:0,         !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+--+--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.30) John wants to catch a fish and eat it for supper.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)   !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)   !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:0)   !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, supper)
                sc(it, supper) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI2)
                sc(it, PHI2) = True
                agr(it, PHI2) = True
                rnr(it, PHI2) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, fish)
                sc(it, fish) = True
                agr(it, fish) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI1)
                sc(it, PHI1) = True
                agr(it, PHI1) = True
                rnr(it, PHI1) = True
                chaining_e_to_n(itA, PHI1)
                    agr(itA, PHI1) = True
                    new_chain(itA, PHI1)
                        new_chain: create PHI1B
                        new_chain: create PHI1B^itA

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)   !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6A,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:0)   !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, John)
                sc(it, John) = True
                agr(it, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI2)
        non_refl_chaining(PHI2)
            chaining_n_to_n(PHI2, supper)
                sc(PHI2, supper) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, it)
                sc(PHI2, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, fish)
                sc(PHI2, fish) = True
                agr(PHI2, fish) = True
                rnr(PHI2, fish) = True
                chaining_e_to_n(PHI2A, fish)
                    agr(PHI2A, fish) = True
                    new_chain(PHI2A, fish)
                        new_chain: create fishB
                        new_chain: create fishB^PHI2A

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)   !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:6B)  !
!  6B ! (E, sub:B, ftr:[---+??+--], np:6, ch:8A, co:0)  !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, PHI1)
                sc(PHI2, PHI1) = True
                agr(PHI2, PHI1) = True
                rnr(PHI2, PHI1) = True
                chaining_e_to_n(PHI2A, PHI1)
                    agr(PHI2A, PHI1) = True
                    new_chain(PHI2A, PHI1)
                        new_chain: create PHI1C
                        new_chain: create PHI1C^PHI2A

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)   !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:5C) !
!  5C ! (E, sub:C, ftr:[+??????--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:6B)  !
!  6B ! (E, sub:B, ftr:[---+??+--], np:6, ch:8A, co:0)  !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI2, John)
                sc(PHI2, John) = True
                agr(PHI2, John) = True
                rnr(PHI2, John) = True
                chaining_e_to_n(PHI2A, John)
                    agr(PHI2A, John) = True
                    new_chain(PHI2A, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^PHI2A

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B)  !
!  2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:8A, co:0)  !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:5C) !
!  5C ! (E, sub:C, ftr:[+??????--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:6B)  !
!  6B ! (E, sub:B, ftr:[---+??+--], np:6, ch:8A, co:0)  !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI1)
        non_refl_chaining(PHI1)
            chaining_n_to_n(PHI1, supper)
                sc(PHI1, supper) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, it)
                sc(PHI1, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, PHI2)
                sc(PHI1, PHI2) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, fish)
                sc(PHI1, fish) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI1, John)
                sc(PHI1, John) = True
                agr(PHI1, John) = True
                rnr(PHI1, John) = True
                chaining_e_to_n(PHI1A, John)
                    agr(PHI1A, John) = True
                    new_chain(PHI1A, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHI1A

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B)  !
!  2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:8A, co:2C) !
!  2C ! (E, sub:C, ftr:[---+--+--], np:2, ch:5A, co:0)  !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:5C) !
!  5C ! (E, sub:C, ftr:[+??????--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:6B)  !
!  6B ! (E, sub:B, ftr:[---+??+--], np:6, ch:8A, co:0)  !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1B, John)
                    agr(PHI1B, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHI1C, John)
                    agr(PHI1C, John) = True
                    new_chain(PHI1C, John)
                        new_chain: create JohnD
                        new_chain: create JohnD^PHI1C

__________________________NODES__________________________
!     !                                                 !
!  1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
!  2  ! (N, lit:John, ftr:[---+--+--], up:1, dn:0,      !
!     !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2D,    !
!     !  pr:0, su:5, nu:2)                              !
!  2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B)  !
!  2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:8A, co:2C) !
!  2C ! (E, sub:C, ftr:[---+--+--], np:2, ch:5A, co:2D) !
!  2D ! (E, sub:D, ftr:[---+--+--], np:2, ch:5C, co:0)  !
!  3  ! (C, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
!  4  ! (S, up:3, dn:5, lt:0, rt:7, th:5, nu:4)         !
!  5  ! (N, lit:PHI1, ftr:[+??????--], up:4, dn:0,      !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,    !
!     !  pr:2, su:6, nu:5)                              !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)  !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:9A, co:5C) !
!  5C ! (E, sub:C, ftr:[+??????--], np:5, ch:8A, co:0)  !
!  6  ! (N, lit:fish, ftr:[---+??+--], up:4, dn:0,      !
!     !  lt:5, rt:0, th:7, np:6, ch:0, co:6A, ec:6B,    !
!     !  pr:5, su:8, nu:6)                              !
!  6A ! (E, sub:A, ftr:[---+??+--], np:6, ch:0, co:6B)  !
!  6B ! (E, sub:B, ftr:[---+??+--], np:6, ch:8A, co:0)  !
!  7  ! (S, up:3, dn:8, lt:4, rt:0, th:8, nu:7)         !
!  8  ! (N, lit:PHI2, ftr:[+??????--], up:7, dn:0,      !
!     !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!     !  pr:6, su:9, nu:8)                              !
!  8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)   !
!  9  ! (N, lit:it, ftr:[+--+-?---], up:7, dn:0,        !
!     !  lt:8, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,  !
!     !  pr:8, su:10, nu:9)                             !
!  9A ! (E, sub:A, ftr:[+--+-?---], np:9, ch:0, co:0)   !
! 10  ! (N, lit:supper, ftr:[---+-?---], up:7, dn:0,    !
!     !  lt:9, rt:0, th:0, np:10, ch:0, co:10A, ec:10A, !
!     !  pr:9, su:0, nu:10)                             !
! 10A ! (E, sub:A, ftr:[---+-?---], np:10, ch:0, co:0)  !
!_____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.31) No one would put the blame on himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:one, ftr:[+--+-??--], up:1, dn:0,     !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:4, nu:2)                            !
! 2A ! (E, sub:A, ftr:[+--+-??--], np:2, ch:0, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)       !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,     !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:2, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0) !
! 5  ! (N, lit:blame, ftr:[---+-??--], up:3, dn:0,   !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:3, dn:0, !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: blame
            chaining_n_to_n(himself, blame)
                sc(himself, blame) = True
                agr(himself, blame) = True
                rnr(himself, blame) = True
                chaining_e_to_n(himselfA, blame)
                    agr(himselfA, blame) = True
                    new_chain(himselfA, blame)
                        new_chain: create blameB
                        new_chain: create blameB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:one, ftr:[+--+-??--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[+--+-??--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:2, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:blame, ftr:[---+-??--], up:3, dn:0,    !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:3, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(blame)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:one, ftr:[+--+-??--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[+--+-??--], np:2, ch:0, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:2, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+--+--+--], np:4, ch:6A, co:0) !
! 5  ! (N, lit:blame, ftr:[---+-??--], up:3, dn:0,    !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:3, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, blame)
                sc(PHI, blame) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, one)
                sc(PHI, one) = True
                agr(PHI, one) = True
                rnr(PHI, one) = True
                chaining_e_to_n(PHIA, one)
                    agr(PHIA, one) = True
                    new_chain(PHIA, one)
                        new_chain: create oneB
                        new_chain: create oneB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:one, ftr:[+--+-??--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:4, nu:2)                             !
! 2A ! (E, sub:A, ftr:[+--+-??--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[+--+-??--], np:2, ch:4A, co:0) !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)        !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,      !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:2, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+--+--+--], np:4, ch:6A, co:0) !
! 5  ! (N, lit:blame, ftr:[---+-??--], up:3, dn:0,    !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0) !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:3, dn:0,  !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, one)
                    agr(PHIB, one) = True
                    new_chain(PHIB, one)
                        new_chain: create oneC
                        new_chain: create oneC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (N, lit:one, ftr:[+--+-??--], up:1, dn:0,       !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2C,    !
!    !  pr:0, su:4, nu:2)                              !
! 2A ! (E, sub:A, ftr:[+--+-??--], np:2, ch:0, co:2B)  !
! 2B ! (E, sub:B, ftr:[+--+-??--], np:2, ch:4A, co:2C) !
! 2C ! (E, sub:C, ftr:[+--+--+--], np:2, ch:4B, co:0)  !
! 3  ! (S, up:1, dn:4, lt:2, rt:0, th:4, nu:3)         !
! 4  ! (N, lit:PHI, ftr:[+??????--], up:3, dn:0,       !
!    !  lt:0, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:2, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+??????--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+--+--+--], np:4, ch:6A, co:0)  !
! 5  ! (N, lit:blame, ftr:[---+-??--], up:3, dn:0,     !
!    !  lt:4, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,    !
!    !  pr:4, su:6, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:6A, co:0)  !
! 6  ! (N, lit:himself, ftr:[+--+--++-], up:3, dn:0,   !
!    !  lt:5, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,    !
!    !  pr:5, su:0, nu:6)                              !
! 6A ! (E, sub:A, ftr:[+--+--++-], np:6, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(one)
        non_refl_chaining(one)
            chaining_n_to_n(one, himself)
                sc(one, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(one, blame)
                sc(one, blame) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(one, PHI)
                sc(one, PHI) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.32) Sue told Sandy about herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Sue, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0) !
! 3  ! (N, lit:Sandy, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: Sandy
            chaining_n_to_n(herself, Sandy)
                sc(herself, Sandy) = True
                agr(herself, Sandy) = True
                rnr(herself, Sandy) = True
                chaining_e_to_n(herselfA, Sandy)
                    agr(herselfA, Sandy) = True
                    new_chain(herselfA, Sandy)
                        new_chain: create SandyB
                        new_chain: create SandyB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Sue, ftr:[---+-++--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:Sandy, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(Sandy)
            simplex_pred: Sue
            chaining_n_to_n(herself, Sue)
                sc(herself, Sue) = True
                agr(herself, Sue) = True
                rnr(herself, Sue) = True
                chaining_e_to_n(herselfA, Sue)
                    agr(herselfA, Sue) = True
                    new_chain(herselfA, Sue)
                        new_chain: create SueB
                        new_chain: create SueB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Sue, ftr:[---+-++--], up:1, dn:0,      !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+-++--], np:2, ch:4A, co:0) !
! 3  ! (N, lit:Sandy, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(Sue)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.33) *Jill kept talking about himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Jill, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++--], np:2, ch:0, co:0) !
! 3  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0, !
!    !  lt:2, rt:0, th:0, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:0, nu:3)                            !
! 3A ! (E, sub:A, ftr:[+--+--++-], np:3, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: Jill
            chaining_n_to_n(himself, Jill)
                sc(himself, Jill) = True
                agr(himself, Jill) = False
            chaining_n_to_n: exiting
            simplex_pred(Jill)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.34) Does Jack's making a pig of himself bother Bill?
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:Jack's, ftr:[---+--+-+], up:2, dn:0,  !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+-+], np:3, ch:0, co:0) !
! 4  ! (N, lit:pig, ftr:[---+-?+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:himself, ftr:[+--+--++-], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:6, nu:5)                            !
! 5A ! (E, sub:A, ftr:[+--+--++-], np:5, ch:0, co:0) !
! 6  ! (N, lit:Bill, ftr:[---+--+--], up:1, dn:0,    !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:5, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: pig
            chaining_n_to_n(himself, pig)
                sc(himself, pig) = True
                agr(himself, pig) = True
                rnr(himself, pig) = True
                chaining_e_to_n(himselfA, pig)
                    agr(himselfA, pig) = True
                    new_chain(himselfA, pig)
                        new_chain: create pigB
                        new_chain: create pigB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:Jack's, ftr:[---+--+-+], up:2, dn:0,   !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+-+], np:3, ch:0, co:0)  !
! 4  ! (N, lit:pig, ftr:[---+-?+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+-?+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:5A, co:0) !
! 5  ! (N, lit:himself, ftr:[+--+--++-], up:2, dn:0,  !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:6, nu:5)                             !
! 5A ! (E, sub:A, ftr:[+--+--++-], np:5, ch:0, co:0)  !
! 6  ! (N, lit:Bill, ftr:[---+--+--], up:1, dn:0,     !
!    !  lt:2, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:5, su:0, nu:6)                             !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(pig)
            simplex_pred: Jack's
            chaining_n_to_n(himself, Jack's)
                sc(himself, Jack's) = True
                agr(himself, Jack's) = True
                rnr(himself, Jack's) = False
            chaining_n_to_n: exiting
            simplex_pred(Jack's)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.35) John wants to give June a present, but he is afraid she won’t like it.
#
################################################################

chaining
    init_table

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7A,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:0)     !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

    init_table: exiting
    chaining_n(it)
        non_refl_chaining(it)
            chaining_n_to_n(it, she)
                sc(it, she) = True
                agr(it, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, he)
                sc(it, he) = True
                agr(it, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, present)
                sc(it, present) = True
                agr(it, present) = True
                rnr(it, present) = True
                chaining_e_to_n(itA, present)
                    agr(itA, present) = True
                    new_chain(itA, present)
                        new_chain: create presentB
                        new_chain: create presentB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5A,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:0)     !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, June)
                sc(it, June) = True
                agr(it, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(it, PHI)
                sc(it, PHI) = True
                agr(it, PHI) = True
                rnr(it, PHI) = True
                chaining_e_to_n(itA, PHI)
                    agr(itA, PHI) = True
                    new_chain(itA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^itA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0)     !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(it, John)
                sc(it, John) = True
                agr(it, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(she)
        non_refl_chaining(she)
            chaining_n_to_n(she, it)
                sc(she, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, he)
                sc(she, he) = True
                agr(she, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, present)
                sc(she, present) = True
                agr(she, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(she, June)
                sc(she, June) = True
                agr(she, June) = True
                rnr(she, June) = True
                chaining_e_to_n(sheA, June)
                    agr(sheA, June) = True
                    new_chain(sheA, June)
                        new_chain: create JuneB
                        new_chain: create JuneB^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5B,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, PHI)
                sc(she, PHI) = True
                agr(she, PHI) = True
                rnr(she, PHI) = True
                chaining_e_to_n(sheA, PHI)
                    agr(sheA, PHI) = True
                    new_chain(sheA, PHI)
                        new_chain: create PHIC
                        new_chain: create PHIC^sheA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5C,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:0)   !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(she, John)
                sc(she, John) = True
                agr(she, John) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, it)
                sc(he, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, she)
                sc(he, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, present)
                sc(he, present) = True
                agr(he, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, June)
                sc(he, June) = True
                agr(he, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, PHI)
                sc(he, PHI) = True
                agr(he, PHI) = True
                rnr(he, PHI) = True
                chaining_e_to_n(heA, PHI)
                    agr(heA, PHI) = True
                    new_chain(heA, PHI)
                        new_chain: create PHID
                        new_chain: create PHID^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)     !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, John)
                sc(he, John) = True
                agr(he, John) = True
                rnr(he, John) = True
                chaining_e_to_n(heA, John)
                    agr(heA, John) = True
                    new_chain(heA, John)
                        new_chain: create JohnB
                        new_chain: create JohnB^heA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, it)
                sc(PHI, it) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, she)
                sc(PHI, she) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, he)
                sc(PHI, he) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, present)
                sc(PHI, present) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, June)
                sc(PHI, June) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, John)
                sc(PHI, John) = True
                agr(PHI, John) = True
                rnr(PHI, John) = True
                chaining_e_to_n(PHIA, John)
                    agr(PHIA, John) = True
                    new_chain(PHIA, John)
                        new_chain: create JohnC
                        new_chain: create JohnC^PHIA

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, John)
                    agr(PHIB, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIC, John)
                    agr(PHIC, John) = False
                chaining_e_to_n: exiting
                chaining_e_to_n(PHID, John)
                    agr(PHID, John) = True
                    new_chain(PHID, John)
                        new_chain: create JohnD
                        new_chain: create JohnD^PHID

___________________________NODES___________________________
!     !                                                   !
!  1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)           !
!  2  ! (S, up:1, dn:3, lt:0, rt:8, th:3, nu:2)           !
!  3  ! (N, lit:John, ftr:[---+--+--], up:2, dn:0,        !
!     !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3D,      !
!     !  pr:0, su:5, nu:3)                                !
!  3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B)    !
!  3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:9A, co:3C)   !
!  3C ! (E, sub:C, ftr:[---+--+--], np:3, ch:5A, co:3D)   !
!  3D ! (E, sub:D, ftr:[---+--+--], np:3, ch:5D, co:0)    !
!  4  ! (S, up:2, dn:5, lt:3, rt:0, th:5, nu:4)           !
!  5  ! (N, lit:PHI, ftr:[+??????--], up:4, dn:0,         !
!     !  lt:0, rt:6, th:6, np:5, ch:0, co:5A, ec:5D,      !
!     !  pr:3, su:6, nu:5)                                !
!  5A ! (E, sub:A, ftr:[+??????--], np:5, ch:0, co:5B)    !
!  5B ! (E, sub:B, ftr:[+--+-?---], np:5, ch:12A, co:5C)  !
!  5C ! (E, sub:C, ftr:[+--+-++--], np:5, ch:11A, co:5D)  !
!  5D ! (E, sub:D, ftr:[+--+--+--], np:5, ch:9A, co:0)    !
!  6  ! (N, lit:June, ftr:[---+-++--], up:4, dn:0,        !
!     !  lt:5, rt:7, th:7, np:6, ch:0, co:6A, ec:6B,      !
!     !  pr:5, su:7, nu:6)                                !
!  6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:6B)    !
!  6B ! (E, sub:B, ftr:[---+-++--], np:6, ch:11A, co:0)   !
!  7  ! (N, lit:present, ftr:[---+-?---], up:4, dn:0,     !
!     !  lt:6, rt:0, th:8, np:7, ch:0, co:7A, ec:7B,      !
!     !  pr:6, su:9, nu:7)                                !
!  7A ! (E, sub:A, ftr:[---+-?---], np:7, ch:0, co:7B)    !
!  7B ! (E, sub:B, ftr:[---+-?---], np:7, ch:12A, co:0)   !
!  8  ! (S, up:1, dn:9, lt:2, rt:0, th:9, nu:8)           !
!  9  ! (N, lit:he, ftr:[+--+--+--], up:8, dn:0,          !
!     !  lt:0, rt:10, th:10, np:9, ch:0, co:9A, ec:9A,    !
!     !  pr:7, su:11, nu:9)                               !
!  9A ! (E, sub:A, ftr:[+--+--+--], np:9, ch:0, co:0)     !
! 10  ! (S, up:8, dn:11, lt:9, rt:0, th:11, nu:10)        !
! 11  ! (N, lit:she, ftr:[+--+-++--], up:10, dn:0,        !
!     !  lt:0, rt:12, th:12, np:11, ch:0, co:11A, ec:11A, !
!     !  pr:9, su:12, nu:11)                              !
! 11A ! (E, sub:A, ftr:[+--+-++--], np:11, ch:0, co:0)    !
! 12  ! (N, lit:it, ftr:[+--+-?---], up:10, dn:0,         !
!     !  lt:11, rt:0, th:0, np:12, ch:0, co:12A, ec:12A,  !
!     !  pr:11, su:0, nu:12)                              !
! 12A ! (E, sub:A, ftr:[+--+-?---], np:12, ch:0, co:0)    !
!_____!___________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (11.36) Ernie doesn't like Bernie, because he is such an asshole.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:Ernie, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:Bernie, ftr:[---+--+--], up:2, dn:0,  !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,      !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:7, nu:6)                            !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0) !
! 7  ! (N, lit:asshole, ftr:[---+-?+--], up:5, dn:0, !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:6, su:0, nu:7)                            !
! 7A ! (E, sub:A, ftr:[---+-?+--], np:7, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(he)
        non_refl_chaining(he)
            chaining_n_to_n(he, asshole)
                sc(he, asshole) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Bernie)
                sc(he, Bernie) = True
                agr(he, Bernie) = True
                rnr(he, Bernie) = True
                chaining_e_to_n(heA, Bernie)
                    agr(heA, Bernie) = True
                    new_chain(heA, Bernie)
                        new_chain: create BernieB
                        new_chain: create BernieB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Ernie, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:Bernie, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:6A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:asshole, ftr:[---+-?+--], up:5, dn:0,  !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[---+-?+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(he, Ernie)
                sc(he, Ernie) = True
                agr(he, Ernie) = True
                rnr(he, Ernie) = True
                chaining_e_to_n(heA, Ernie)
                    agr(heA, Ernie) = True
                    new_chain(heA, Ernie)
                        new_chain: create ErnieB
                        new_chain: create ErnieB^heA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:Ernie, ftr:[---+--+--], up:2, dn:0,    !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:6A, co:0) !
! 4  ! (N, lit:Bernie, ftr:[---+--+--], up:2, dn:0,   !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:6, nu:4)                             !
! 4A ! (E, sub:A, ftr:[---+--+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[---+--+--], np:4, ch:6A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (N, lit:he, ftr:[+--+--+--], up:5, dn:0,       !
!    !  lt:0, rt:7, th:7, np:6, ch:0, co:6A, ec:6A,   !
!    !  pr:4, su:7, nu:6)                             !
! 6A ! (E, sub:A, ftr:[+--+--+--], np:6, ch:0, co:0)  !
! 7  ! (N, lit:asshole, ftr:[---+-?+--], up:5, dn:0,  !
!    !  lt:6, rt:0, th:0, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:6, su:0, nu:7)                             !
! 7A ! (E, sub:A, ftr:[---+-?+--], np:7, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.2) Mary's father killed himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: father
            chaining_n_to_n(himself, father)
                sc(himself, father) = True
                agr(himself, father) = True
                rnr(himself, father) = True
                chaining_e_to_n(himselfA, father)
                    agr(himselfA, father) = True
                    new_chain(himselfA, father)
                        new_chain: create fatherB
                        new_chain: create fatherB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+--+--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(father)
            simplex_pred: Mary's
            chaining_n_to_n(himself, Mary's)
                sc(himself, Mary's) = True
                agr(himself, Mary's) = False
            chaining_n_to_n: exiting
            simplex_pred(Mary's)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.3) *Mary's father killed him.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, father)
                sc(him, father) = True
                agr(him, father) = True
                rnr(him, father) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, Mary's)
                sc(him, Mary's) = True
                agr(him, Mary's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.4) *Mary's father killed herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: father
            chaining_n_to_n(herself, father)
                sc(herself, father) = True
                agr(herself, father) = False
            chaining_n_to_n: exiting
            simplex_pred(father)
            simplex_pred: Mary's
            chaining_n_to_n(herself, Mary's)
                sc(herself, Mary's) = True
                agr(herself, Mary's) = True
                rnr(herself, Mary's) = False
            chaining_n_to_n: exiting
            simplex_pred(Mary's)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.5) Mary's father killed her.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+--+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, father)
                sc(her, father) = True
                agr(her, father) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, Mary's)
                sc(her, Mary's) = True
                agr(her, Mary's) = True
                rnr(her, Mary's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.6) The father of Mary killed himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: Mary
            chaining_n_to_n(himself, Mary)
                sc(himself, Mary) = True
                agr(himself, Mary) = False
            chaining_n_to_n: exiting
            simplex_pred(Mary)
            simplex_pred: father
            chaining_n_to_n(himself, father)
                sc(himself, father) = True
                agr(himself, father) = True
                rnr(himself, father) = True
                chaining_e_to_n(himselfA, father)
                    agr(himselfA, father) = True
                    new_chain(himselfA, father)
                        new_chain: create fatherB
                        new_chain: create fatherB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2B,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:2B) !
! 2B ! (E, sub:B, ftr:[---+--+--], np:2, ch:4A, co:0) !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:himself, ftr:[+--+--++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+--++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(father)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.7) *The father of Mary killed him.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:him, ftr:[+--+--+--], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+--+--], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, Mary)
                sc(him, Mary) = True
                agr(him, Mary) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, father)
                sc(him, father) = True
                agr(him, father) = True
                rnr(him, father) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.8) *The father of Mary killed herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: Mary
            chaining_n_to_n(herself, Mary)
                sc(herself, Mary) = True
                agr(herself, Mary) = True
                rnr(herself, Mary) = True
                chaining_e_to_n(herselfA, Mary)
                    agr(herselfA, Mary) = True
                    new_chain(herselfA, Mary)
                        new_chain: create MaryB
                        new_chain: create MaryB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(Mary)
            simplex_pred: father
            chaining_n_to_n(herself, father)
                sc(herself, father) = True
                agr(herself, father) = False
            chaining_n_to_n: exiting
            simplex_pred(father)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.9) The father of Mary killed her.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0) !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,    !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, Mary)
                sc(her, Mary) = True
                agr(her, Mary) = True
                rnr(her, Mary) = True
                chaining_e_to_n(herA, Mary)
                    agr(herA, Mary) = True
                    new_chain(herA, Mary)
                        new_chain: create MaryB
                        new_chain: create MaryB^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:father, ftr:[---+--+--], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+--+--], np:2, ch:0, co:0)  !
! 3  ! (N, lit:Mary, ftr:[---+-++--], up:1, dn:0,     !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,      !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(her, father)
                sc(her, father) = True
                agr(her, father) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.11) Mary's mother cooks only for herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:mother, ftr:[---+-++--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0, !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: mother
            chaining_n_to_n(herself, mother)
                sc(herself, mother) = True
                agr(herself, mother) = True
                rnr(herself, mother) = True
                chaining_e_to_n(herselfA, mother)
                    agr(herselfA, mother) = True
                    new_chain(herselfA, mother)
                        new_chain: create motherB
                        new_chain: create motherB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mother, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:herself, ftr:[+--+-+++-], up:1, dn:0,  !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-+++-], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(mother)
            simplex_pred: Mary's
            chaining_n_to_n(herself, Mary's)
                sc(herself, Mary's) = True
                agr(herself, Mary's) = True
                rnr(herself, Mary's) = False
            chaining_n_to_n: exiting
            simplex_pred(Mary's)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.12) Mary's mother cooks only for her.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:mother, ftr:[---+-++--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,     !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:0, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, mother)
                sc(her, mother) = True
                agr(her, mother) = True
                rnr(her, mother) = True
                chaining_e_to_n(herA, mother)
                    agr(herA, mother) = True
                    new_chain(herA, mother)
                        new_chain: create motherB
                        new_chain: create motherB^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mother, ftr:[---+-++--], up:1, dn:0,   !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,      !
!    !  lt:3, rt:0, th:0, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:0, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(her, Mary's)
                sc(her, Mary's) = True
                agr(her, Mary's) = True
                rnr(her, Mary's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (12.13) Mary's mother cooks only for her mother.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,  !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,  !
!    !  pr:0, su:3, nu:2)                            !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0) !
! 3  ! (N, lit:mother1, ftr:[---+-++--], up:1, dn:0, !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:2, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0) !
! 5  ! (N, lit:mother2, ftr:[---+-++--], up:1, dn:0, !
!    !  lt:4, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:0, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, mother2)
                sc(her, mother2) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, mother1)
                sc(her, mother1) = True
                agr(her, mother1) = True
                rnr(her, mother1) = True
                chaining_e_to_n(herA, mother1)
                    agr(herA, mother1) = True
                    new_chain(herA, mother1)
                        new_chain: create mother1B
                        new_chain: create mother1B^herA

_________________________NODES_________________________
!    !                                                !
! 1  ! (S, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (N, lit:Mary's, ftr:[---+-++-+], up:1, dn:0,   !
!    !  lt:0, rt:3, th:3, np:2, ch:0, co:2A, ec:2A,   !
!    !  pr:0, su:3, nu:2)                             !
! 2A ! (E, sub:A, ftr:[---+-++-+], np:2, ch:0, co:0)  !
! 3  ! (N, lit:mother1, ftr:[---+-++--], up:1, dn:0,  !
!    !  lt:2, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:2, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[---+-++--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[---+-++--], np:3, ch:4A, co:0) !
! 4  ! (N, lit:her, ftr:[+--+-++-?], up:1, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+--+-++-?], np:4, ch:0, co:0)  !
! 5  ! (N, lit:mother2, ftr:[---+-++--], up:1, dn:0,  !
!    !  lt:4, rt:0, th:0, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:0, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(her, Mary's)
                sc(her, Mary's) = True
                agr(her, Mary's) = True
                rnr(her, Mary's) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.2) It was difficult to sketch myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: PHI
            chaining_n_to_n(myself, PHI)
                sc(myself, PHI) = True
                agr(myself, PHI) = True
                rnr(myself, PHI) = True
                chaining_e_to_n(myselfA, PHI)
                    agr(myselfA, PHI) = True
                    new_chain(myselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, myself)
                sc(PHI, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = True
                    new_chain(PHIB, I0)
                        new_chain: create I0C
                        new_chain: create I0C^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:3C) !
! 3C ! (E, sub:C, ftr:[++---?+--], np:3, ch:7B, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,    !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, myself)
                sc(you0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, myself)
                sc(I0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.5a) It was difficult for me to sketch myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[++---?+--], np:7, ch:0, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: me
            chaining_n_to_n(myself, me)
                sc(myself, me) = True
                agr(myself, me) = True
                rnr(myself, me) = True
                chaining_e_to_n(myselfA, me)
                    agr(myselfA, me) = True
                    new_chain(myselfA, me)
                        new_chain: create meB
                        new_chain: create meB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[++---?+--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(me)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(me)
        non_refl_chaining(me)
            chaining_n_to_n(me, myself)
                sc(me, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, you0)
                sc(me, you0) = True
                agr(me, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, I0)
                sc(me, I0) = True
                agr(me, I0) = True
                rnr(me, I0) = True
                chaining_e_to_n(meA, I0)
                    agr(meA, I0) = True
                    new_chain(meA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^meA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[++---?+--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(meB, I0)
                    agr(meB, I0) = True
                    new_chain(meB, I0)
                        new_chain: create I0C
                        new_chain: create I0C^meB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:3C) !
! 3C ! (E, sub:C, ftr:[++---?+--], np:3, ch:7B, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[++---?+--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,    !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, myself)
                sc(you0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, me)
                sc(you0, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, myself)
                sc(I0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, me)
                sc(I0, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.6a) It was difficult for you to sketch yourself.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:0)  !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(yourself)
        refl_chaining(yourself)
            simplex_pred(yourself)
            simplex_pred: you
            chaining_n_to_n(yourself, you)
                sc(yourself, you) = True
                agr(yourself, you) = True
                rnr(yourself, you) = True
                chaining_e_to_n(yourselfA, you)
                    agr(yourselfA, you) = True
                    new_chain(yourselfA, you)
                        new_chain: create youB
                        new_chain: create youB^yourselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(you)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you)
        non_refl_chaining(you)
            chaining_n_to_n(you, yourself)
                sc(you, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you, you0)
                sc(you, you0) = True
                agr(you, you0) = True
                rnr(you, you0) = True
                chaining_e_to_n(youA, you0)
                    agr(youA, you0) = True
                    new_chain(youA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^youA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(youB, you0)
                    agr(youB, you0) = True
                    new_chain(youB, you0)
                        new_chain: create you0C
                        new_chain: create you0C^youB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C) !
! 4C ! (E, sub:C, ftr:[+-+--?+--], np:4, ch:7B, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(you, I0)
                sc(you, I0) = True
                agr(you, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, yourself)
                sc(you0, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, you)
                sc(you0, you) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, yourself)
                sc(I0, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you)
                sc(I0, you) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.7a) It was difficult for him to sketch himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: him
            chaining_n_to_n(himself, him)
                sc(himself, him) = True
                agr(himself, him) = True
                rnr(himself, him) = True
                chaining_e_to_n(himselfA, him)
                    agr(himselfA, him) = True
                    new_chain(himselfA, him)
                        new_chain: create himB
                        new_chain: create himB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:him, ftr:[+--+--+--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+--+--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(him)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(him)
        non_refl_chaining(him)
            chaining_n_to_n(him, himself)
                sc(him, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, you0)
                sc(him, you0) = True
                agr(him, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(him, I0)
                sc(him, I0) = True
                agr(him, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, himself)
                sc(you0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, him)
                sc(you0, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, himself)
                sc(I0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, him)
                sc(I0, him) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.8a) It was difficult for her to sketch herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:her, ftr:[+--+-++-?], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+--+-++-?], np:7, ch:0, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: her
            chaining_n_to_n(herself, her)
                sc(herself, her) = True
                agr(herself, her) = True
                rnr(herself, her) = True
                chaining_e_to_n(herselfA, her)
                    agr(herselfA, her) = True
                    new_chain(herselfA, her)
                        new_chain: create herB
                        new_chain: create herB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:her, ftr:[+--+-++-?], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+--+-++-?], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(her)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(her)
        non_refl_chaining(her)
            chaining_n_to_n(her, herself)
                sc(her, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, you0)
                sc(her, you0) = True
                agr(her, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(her, I0)
                sc(her, I0) = True
                agr(her, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, herself)
                sc(you0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, her)
                sc(you0, her) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, herself)
                sc(I0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, her)
                sc(I0, her) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.9a) It was difficult for us to sketch ourselves.
#
################################################################

chaining
    init_table

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:us, ftr:[++--+?+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[++--+?+--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

    init_table: exiting
    chaining_n(ourselves)
        refl_chaining(ourselves)
            simplex_pred(ourselves)
            simplex_pred: us
            chaining_n_to_n(ourselves, us)
                sc(ourselves, us) = True
                agr(ourselves, us) = True
                rnr(ourselves, us) = True
                chaining_e_to_n(ourselvesA, us)
                    agr(ourselvesA, us) = True
                    new_chain(ourselvesA, us)
                        new_chain: create usB
                        new_chain: create usB^ourselvesA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:us, ftr:[++--+?+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[++--+?+--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++--+?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(us)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(us)
        non_refl_chaining(us)
            chaining_n_to_n(us, ourselves)
                sc(us, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(us, you0)
                sc(us, you0) = True
                agr(us, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(us, I0)
                sc(us, I0) = True
                agr(us, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, ourselves)
                sc(you0, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, us)
                sc(you0, us) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, ourselves)
                sc(I0, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, us)
                sc(I0, us) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.10a) It was difficult for you to sketch yourselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:0)    !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(yourselves)
        refl_chaining(yourselves)
            simplex_pred(yourselves)
            simplex_pred: you
            chaining_n_to_n(yourselves, you)
                sc(yourselves, you) = True
                agr(yourselves, you) = True
                rnr(yourselves, you) = True
                chaining_e_to_n(yourselvesA, you)
                    agr(yourselvesA, you) = True
                    new_chain(yourselvesA, you)
                        new_chain: create youB
                        new_chain: create youB^yourselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(you)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you)
        non_refl_chaining(you)
            chaining_n_to_n(you, yourselves)
                sc(you, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you, you0)
                sc(you, you0) = True
                agr(you, you0) = True
                rnr(you, you0) = True
                chaining_e_to_n(youA, you0)
                    agr(youA, you0) = True
                    new_chain(youA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^youA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(youB, you0)
                    agr(youB, you0) = True
                    new_chain(youB, you0)
                        new_chain: create you0C
                        new_chain: create you0C^youB

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C)  !
! 4C ! (E, sub:C, ftr:[+-+-+?+--], np:4, ch:7B, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:you, ftr:[+-+-??+--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+-+-??+--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(you, I0)
                sc(you, I0) = True
                agr(you, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, yourselves)
                sc(you0, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, you)
                sc(you0, you) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, yourselves)
                sc(I0, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you)
                sc(I0, you) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.11a) It was difficult for them to sketch themselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:them, ftr:[+--++??--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:0)    !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: them
            chaining_n_to_n(themselves, them)
                sc(themselves, them) = True
                agr(themselves, them) = True
                rnr(themselves, them) = True
                chaining_e_to_n(themselvesA, them)
                    agr(themselvesA, them) = True
                    new_chain(themselvesA, them)
                        new_chain: create themB
                        new_chain: create themB^themselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:them, ftr:[+--++??--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+--++??--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(them)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(them)
        non_refl_chaining(them)
            chaining_n_to_n(them, themselves)
                sc(them, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, you0)
                sc(them, you0) = True
                agr(them, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(them, I0)
                sc(them, I0) = True
                agr(them, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, themselves)
                sc(you0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, them)
                sc(you0, them) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, themselves)
                sc(I0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, them)
                sc(I0, them) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.5b) It was difficult to sketch myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: PHI
            chaining_n_to_n(myself, PHI)
                sc(myself, PHI) = True
                agr(myself, PHI) = True
                rnr(myself, PHI) = True
                chaining_e_to_n(myselfA, PHI)
                    agr(myselfA, PHI) = True
                    new_chain(myselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, myself)
                sc(PHI, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = True
                    new_chain(PHIB, I0)
                        new_chain: create I0C
                        new_chain: create I0C^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:3C) !
! 3C ! (E, sub:C, ftr:[++---?+--], np:3, ch:7B, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,    !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, myself)
                sc(you0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, myself)
                sc(I0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.6b) It was difficult to sketch yourself.
#
################################################################

chaining
    init_table

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)  !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

    init_table: exiting
    chaining_n(yourself)
        refl_chaining(yourself)
            simplex_pred(yourself)
            simplex_pred: PHI
            chaining_n_to_n(yourself, PHI)
                sc(yourself, PHI) = True
                agr(yourself, PHI) = True
                rnr(yourself, PHI) = True
                chaining_e_to_n(yourselfA, PHI)
                    agr(yourselfA, PHI) = True
                    new_chain(yourselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^yourselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, yourself)
                sc(PHI, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = True
                    new_chain(PHIB, you0)
                        new_chain: create you0C
                        new_chain: create you0C^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C) !
! 4C ! (E, sub:C, ftr:[+-+--?+--], np:4, ch:7B, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C) !
! 4C ! (E, sub:C, ftr:[+-+--?+--], np:4, ch:7B, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[+-+--?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:yourself, ftr:[+-+--?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+-+--?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, yourself)
                sc(you0, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, yourself)
                sc(I0, yourself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.7b) *It was difficult to sketch himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, himself)
                sc(you0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, himself)
                sc(I0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.8b) *It was difficult to sketch herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: PHI
            chaining_n_to_n(herself, PHI)
                sc(herself, PHI) = True
                agr(herself, PHI) = True
                rnr(herself, PHI) = True
                chaining_e_to_n(herselfA, PHI)
                    agr(herselfA, PHI) = True
                    new_chain(herselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, herself)
                sc(PHI, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, herself)
                sc(you0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, herself)
                sc(I0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.9b) It was difficult to sketch ourselves.
#
################################################################

chaining
    init_table

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

    init_table: exiting
    chaining_n(ourselves)
        refl_chaining(ourselves)
            simplex_pred(ourselves)
            simplex_pred: PHI
            chaining_n_to_n(ourselves, PHI)
                sc(ourselves, PHI) = True
                agr(ourselves, PHI) = True
                rnr(ourselves, PHI) = True
                chaining_e_to_n(ourselvesA, PHI)
                    agr(ourselvesA, PHI) = True
                    new_chain(ourselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^ourselvesA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++--+?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, ourselves)
                sc(PHI, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++--+?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++--+?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:ourselves, ftr:[++--+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++--+?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, ourselves)
                sc(you0, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, ourselves)
                sc(I0, ourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.10b) It was difficult to sketch yourselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)    !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(yourselves)
        refl_chaining(yourselves)
            simplex_pred(yourselves)
            simplex_pred: PHI
            chaining_n_to_n(yourselves, PHI)
                sc(yourselves, PHI) = True
                agr(yourselves, PHI) = True
                rnr(yourselves, PHI) = True
                chaining_e_to_n(yourselvesA, PHI)
                    agr(yourselvesA, PHI) = True
                    new_chain(yourselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^yourselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, yourselves)
                sc(PHI, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = True
                    new_chain(PHIB, you0)
                        new_chain: create you0C
                        new_chain: create you0C^PHIB

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C)  !
! 4C ! (E, sub:C, ftr:[+-+-+?+--], np:4, ch:7B, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)   !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4C,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:4C)  !
! 4C ! (E, sub:C, ftr:[+-+-+?+--], np:4, ch:7B, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+-+-+?+--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:yourselves, ftr:[+-+-+?++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+-+-+?++-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, yourselves)
                sc(you0, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, yourselves)
                sc(I0, yourselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.11b) *It was difficult to sketch themselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)    !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: PHI
            chaining_n_to_n(themselves, PHI)
                sc(themselves, PHI) = True
                agr(themselves, PHI) = True
                rnr(themselves, PHI) = True
                chaining_e_to_n(themselvesA, PHI)
                    agr(themselvesA, PHI) = True
                    new_chain(themselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^themselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, themselves)
                sc(PHI, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)   !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, themselves)
                sc(you0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, themselves)
                sc(I0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.12a) Nurse Bob Breezy gave up drawing.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:Bob, ftr:[---+--+--], up:5, dn:0,     !
!    !  lt:0, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+--+--], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, Bob)
                sc(you0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, Bob)
                sc(I0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.12b) [Bob] It was difficult to sketch himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:8, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:5, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Bob)
                sc(PHI, Bob) = True
                agr(PHI, Bob) = True
                rnr(PHI, Bob) = True
                chaining_e_to_n(PHIA, Bob)
                    agr(PHIA, Bob) = True
                    new_chain(PHIA, Bob)
                        new_chain: create BobB
                        new_chain: create BobB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, Bob)
                    agr(PHIB, Bob) = True
                    new_chain(PHIB, Bob)
                        new_chain: create BobC
                        new_chain: create BobC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, himself)
                sc(you0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, Bob)
                sc(you0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, himself)
                sc(I0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, Bob)
                sc(I0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.13a) Astronaut Linda Smith gave up drawing.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:6, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (N, lit:Linda, ftr:[---+-++--], up:5, dn:0,   !
!    !  lt:0, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,  !
!    !  pr:4, su:0, nu:6)                            !
! 6A ! (E, sub:A, ftr:[---+-++--], np:6, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, Linda)
                sc(you0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, Linda)
                sc(I0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.13b) [Linda] It was difficult to sketch herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,   !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:8, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:5, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: PHI
            chaining_n_to_n(herself, PHI)
                sc(herself, PHI) = True
                agr(herself, PHI) = True
                rnr(herself, PHI) = True
                chaining_e_to_n(herselfA, PHI)
                    agr(herselfA, PHI) = True
                    new_chain(herselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, herself)
                sc(PHI, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Linda)
                sc(PHI, Linda) = True
                agr(PHI, Linda) = True
                rnr(PHI, Linda) = True
                chaining_e_to_n(PHIA, Linda)
                    agr(PHIA, Linda) = True
                    new_chain(PHIA, Linda)
                        new_chain: create LindaB
                        new_chain: create LindaB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, Linda)
                    agr(PHIB, Linda) = True
                    new_chain(PHIB, Linda)
                        new_chain: create LindaC
                        new_chain: create LindaC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, herself)
                sc(you0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, Linda)
                sc(you0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, herself)
                sc(I0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, Linda)
                sc(I0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.14a) The bank embezzlers gave up drawing.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:6, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (N, lit:embezzlers, ftr:[---++?+--], up:5, dn:0, !
!    !  lt:0, rt:0, th:0, np:6, ch:0, co:6A, ec:6A,     !
!    !  pr:4, su:0, nu:6)                               !
! 6A ! (E, sub:A, ftr:[---++?+--], np:6, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, embezzlers)
                sc(you0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, embezzlers)
                sc(I0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.14b) [the bank embezzlers] It was difficult to sketch themselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:0)    !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)    !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: PHI
            chaining_n_to_n(themselves, PHI)
                sc(themselves, PHI) = True
                agr(themselves, PHI) = True
                rnr(themselves, PHI) = True
                chaining_e_to_n(themselvesA, PHI)
                    agr(themselvesA, PHI) = True
                    new_chain(themselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^themselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:0)    !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, themselves)
                sc(PHI, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, embezzlers)
                sc(PHI, embezzlers) = True
                agr(PHI, embezzlers) = True
                rnr(PHI, embezzlers) = True
                chaining_e_to_n(PHIA, embezzlers)
                    agr(PHIA, embezzlers) = True
                    new_chain(PHIA, embezzlers)
                        new_chain: create embezzlersB
                        new_chain: create embezzlersB^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, embezzlers)
                    agr(PHIB, embezzlers) = True
                    new_chain(PHIB, embezzlers)
                        new_chain: create embezzlersC
                        new_chain: create embezzlersC^PHIB

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)   !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)   !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)   !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, themselves)
                sc(you0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, embezzlers)
                sc(you0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, themselves)
                sc(I0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, embezzlers)
                sc(I0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.15) *It was difficult to sketch himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+--+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:himself, ftr:[+--+--++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+--++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, himself)
                sc(you0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, himself)
                sc(I0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.16) *It was difficult to sketch herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: PHI
            chaining_n_to_n(herself, PHI)
                sc(herself, PHI) = True
                agr(herself, PHI) = True
                rnr(herself, PHI) = True
                chaining_e_to_n(herselfA, PHI)
                    agr(herselfA, PHI) = True
                    new_chain(herselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, herself)
                sc(PHI, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[+--+-++--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:herself, ftr:[+--+-+++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+--+-+++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, herself)
                sc(you0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, herself)
                sc(I0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.17) *It was difficult to sketch themselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)    !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: PHI
            chaining_n_to_n(themselves, PHI)
                sc(themselves, PHI) = True
                agr(themselves, PHI) = True
                rnr(themselves, PHI) = True
                chaining_e_to_n(themselvesA, PHI)
                    agr(themselvesA, PHI) = True
                    new_chain(themselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^themselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, themselves)
                sc(PHI, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)   !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:7, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)   !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)          !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)          !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,        !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,     !
!    !  pr:4, su:8, nu:7)                               !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)   !
! 7B ! (E, sub:B, ftr:[+--++??--], np:7, ch:8A, co:0)   !
! 8  ! (N, lit:themselves, ftr:[+--++??+-], up:6, dn:0, !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:7, su:0, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+--++??+-], np:8, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, themselves)
                sc(you0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, themselves)
                sc(I0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.18) [Bob] It was difficult to sketch himself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:8, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:5, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(himself)
        refl_chaining(himself)
            simplex_pred(himself)
            simplex_pred: PHI
            chaining_n_to_n(himself, PHI)
                sc(himself, PHI) = True
                agr(himself, PHI) = True
                rnr(himself, PHI) = True
                chaining_e_to_n(himselfA, PHI)
                    agr(himselfA, PHI) = True
                    new_chain(himselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^himselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, himself)
                sc(PHI, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Bob)
                sc(PHI, Bob) = True
                agr(PHI, Bob) = True
                rnr(PHI, Bob) = True
                chaining_e_to_n(PHIA, Bob)
                    agr(PHIA, Bob) = True
                    new_chain(PHIA, Bob)
                        new_chain: create BobB
                        new_chain: create BobB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, Bob)
                    agr(PHIB, Bob) = True
                    new_chain(PHIB, Bob)
                        new_chain: create BobC
                        new_chain: create BobC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Bob, ftr:[---+--+--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+--+--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+--+--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+--+--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+--+--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:himself, ftr:[+--+--++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+--++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, himself)
                sc(you0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, Bob)
                sc(you0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, himself)
                sc(I0, himself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, Bob)
                sc(I0, Bob) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.19) [Linda] It was difficult to sketch herself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,   !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:8, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)       !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,     !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:5, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(herself)
        refl_chaining(herself)
            simplex_pred(herself)
            simplex_pred: PHI
            chaining_n_to_n(herself, PHI)
                sc(herself, PHI) = True
                agr(herself, PHI) = True
                rnr(herself, PHI) = True
                chaining_e_to_n(herselfA, PHI)
                    agr(herselfA, PHI) = True
                    new_chain(herselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^herselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, herself)
                sc(PHI, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, Linda)
                sc(PHI, Linda) = True
                agr(PHI, Linda) = True
                rnr(PHI, Linda) = True
                chaining_e_to_n(PHIA, Linda)
                    agr(PHIA, Linda) = True
                    new_chain(PHIA, Linda)
                        new_chain: create LindaB
                        new_chain: create LindaB^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,    !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:8, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)        !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,      !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,   !
!    !  pr:5, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B) !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0) !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,  !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, Linda)
                    agr(PHIB, Linda) = True
                    new_chain(PHIB, Linda)
                        new_chain: create LindaC
                        new_chain: create LindaC^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)  !
! 5  ! (N, lit:Linda, ftr:[---+-++--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:8, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-++--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-++--], np:5, ch:8A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-++--], np:5, ch:8B, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)         !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,       !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,    !
!    !  pr:5, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)  !
! 8B ! (E, sub:B, ftr:[+--+-++--], np:8, ch:9A, co:0)  !
! 9  ! (N, lit:herself, ftr:[+--+-+++-], up:7, dn:0,   !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-+++-], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, herself)
                sc(you0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, Linda)
                sc(you0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, herself)
                sc(I0, herself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, Linda)
                sc(I0, Linda) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.20) [the bank embezzlers] It was difficult to sketch themselves.
#
################################################################

chaining
    init_table

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:0)    !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:0)    !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

    init_table: exiting
    chaining_n(themselves)
        refl_chaining(themselves)
            simplex_pred(themselves)
            simplex_pred: PHI
            chaining_n_to_n(themselves, PHI)
                sc(themselves, PHI) = True
                agr(themselves, PHI) = True
                rnr(themselves, PHI) = True
                chaining_e_to_n(themselvesA, PHI)
                    agr(themselvesA, PHI) = True
                    new_chain(themselvesA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^themselvesA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:0)    !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, themselves)
                sc(PHI, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, embezzlers)
                sc(PHI, embezzlers) = True
                agr(PHI, embezzlers) = True
                rnr(PHI, embezzlers) = True
                chaining_e_to_n(PHIA, embezzlers)
                    agr(PHIA, embezzlers) = True
                    new_chain(PHIA, embezzlers)
                        new_chain: create embezzlersB
                        new_chain: create embezzlersB^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, embezzlers)
                    agr(PHIB, embezzlers) = True
                    new_chain(PHIB, embezzlers)
                        new_chain: create embezzlersC
                        new_chain: create embezzlersC^PHIB

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)    !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)    !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)   !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

__________________________NODES__________________________
!    !                                                  !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)          !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)          !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,         !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,     !
!    !  pr:0, su:4, nu:3)                               !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)   !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)   !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,       !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,     !
!    !  pr:3, su:5, nu:4)                               !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)   !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:8A, co:0)   !
! 5  ! (N, lit:embezzlers, ftr:[---++?+--], up:2, dn:0, !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,     !
!    !  pr:4, su:8, nu:5)                               !
! 5A ! (E, sub:A, ftr:[---++?+--], np:5, ch:0, co:5B)   !
! 5B ! (E, sub:B, ftr:[---++?+--], np:5, ch:8A, co:5C)  !
! 5C ! (E, sub:C, ftr:[---++?+--], np:5, ch:8B, co:0)   !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)          !
! 7  ! (S, up:6, dn:8, lt:0, rt:0, th:8, nu:7)          !
! 8  ! (N, lit:PHI, ftr:[+??????--], up:7, dn:0,        !
!    !  lt:0, rt:9, th:9, np:8, ch:0, co:8A, ec:8B,     !
!    !  pr:5, su:9, nu:8)                               !
! 8A ! (E, sub:A, ftr:[+??????--], np:8, ch:0, co:8B)   !
! 8B ! (E, sub:B, ftr:[+--++??--], np:8, ch:9A, co:0)   !
! 9  ! (N, lit:themselves, ftr:[+--++??+-], up:7, dn:0, !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,     !
!    !  pr:8, su:0, nu:9)                               !
! 9A ! (E, sub:A, ftr:[+--++??+-], np:9, ch:0, co:0)    !
!____!__________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, themselves)
                sc(you0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, embezzlers)
                sc(you0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, themselves)
                sc(I0, themselves) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, embezzlers)
                sc(I0, embezzlers) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.21) It was difficult to sketch myself.
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:7, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)       !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:4, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,  !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:0, nu:8)                            !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(myself)
        refl_chaining(myself)
            simplex_pred(myself)
            simplex_pred: PHI
            chaining_n_to_n(myself, PHI)
                sc(myself, PHI) = True
                agr(myself, PHI) = True
                rnr(myself, PHI) = True
                chaining_e_to_n(myselfA, PHI)
                    agr(myselfA, PHI) = True
                    new_chain(myselfA, PHI)
                        new_chain: create PHIB
                        new_chain: create PHIB^myselfA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            simplex_pred(PHI)
            simplex_pred: 
        refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, myself)
                sc(PHI, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, you0)
                    agr(PHIB, you0) = False
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^PHIA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,   !
!    !  pr:3, su:7, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B) !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0) !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)        !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,   !
!    !  pr:4, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B) !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0) !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,   !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:0, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
                chaining_e_to_n(PHIB, I0)
                    agr(PHIB, I0) = True
                    new_chain(PHIB, I0)
                        new_chain: create I0C
                        new_chain: create I0C^PHIB

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:5, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:7A, co:3C) !
! 3C ! (E, sub:C, ftr:[++---?+--], np:3, ch:7B, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:0, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:7, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (S, up:1, dn:6, lt:2, rt:0, th:6, nu:5)         !
! 6  ! (S, up:5, dn:7, lt:0, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7B,    !
!    !  pr:4, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:7B)  !
! 7B ! (E, sub:B, ftr:[++---?+--], np:7, ch:8A, co:0)  !
! 8  ! (N, lit:myself, ftr:[++---?++-], up:6, dn:0,    !
!    !  lt:7, rt:0, th:0, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:0, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?++-], np:8, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, myself)
                sc(you0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, myself)
                sc(I0, myself) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting

################################################################
#
#     (13.22) [toy] Give me that!
#
################################################################

chaining
    init_table

________________________NODES_________________________
!    !                                               !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)       !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)       !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,      !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,  !
!    !  pr:0, su:4, nu:3)                            !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,    !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,  !
!    !  pr:3, su:5, nu:4)                            !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0) !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,     !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5A,  !
!    !  pr:4, su:7, nu:5)                            !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)       !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,     !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,  !
!    !  pr:5, su:8, nu:7)                            !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0) !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,      !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,  !
!    !  pr:7, su:9, nu:8)                            !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0) !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,    !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,  !
!    !  pr:8, su:0, nu:9)                            !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0) !
!____!_______________________________________________!

    init_table: exiting
    chaining_n(that)
        non_refl_chaining(that)
            chaining_n_to_n(that, me)
                sc(that, me) = True
                agr(that, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(that, PHI)
                sc(that, PHI) = True
                agr(that, PHI) = True
                rnr(that, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(that, toy)
                sc(that, toy) = True
                agr(that, toy) = True
                rnr(that, toy) = True
                chaining_e_to_n(thatA, toy)
                    agr(thatA, toy) = True
                    new_chain(thatA, toy)
                        new_chain: create toyB
                        new_chain: create toyB^thatA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3A,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:7, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+-??--], np:5, ch:9A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:5, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)  !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,       !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0)  !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,     !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(that, you0)
                sc(that, you0) = True
                agr(that, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(that, I0)
                sc(that, I0) = True
                agr(that, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(me)
        non_refl_chaining(me)
            chaining_n_to_n(me, that)
                sc(me, that) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, PHI)
                sc(me, PHI) = True
                agr(me, PHI) = True
                rnr(me, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, toy)
                sc(me, toy) = True
                agr(me, toy) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, you0)
                sc(me, you0) = True
                agr(me, you0) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(me, I0)
                sc(me, I0) = True
                agr(me, I0) = True
                rnr(me, I0) = True
                chaining_e_to_n(meA, I0)
                    agr(meA, I0) = True
                    new_chain(meA, I0)
                        new_chain: create I0B
                        new_chain: create I0B^meA

_________________________NODES_________________________
!    !                                                !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)        !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)        !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,       !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,   !
!    !  pr:0, su:4, nu:3)                             !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B) !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0) !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,     !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,   !
!    !  pr:3, su:5, nu:4)                             !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)  !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,      !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5B,   !
!    !  pr:4, su:7, nu:5)                             !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B) !
! 5B ! (E, sub:B, ftr:[---+-??--], np:5, ch:9A, co:0) !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)        !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,      !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,   !
!    !  pr:5, su:8, nu:7)                             !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)  !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,       !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,   !
!    !  pr:7, su:9, nu:8)                             !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0)  !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,     !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,   !
!    !  pr:8, su:0, nu:9)                             !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0)  !
!____!________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(PHI)
        non_refl_chaining(PHI)
            chaining_n_to_n(PHI, that)
                sc(PHI, that) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, me)
                sc(PHI, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, toy)
                sc(PHI, toy) = True
                agr(PHI, toy) = True
                rnr(PHI, toy) = True
                chaining_e_to_n(PHIA, toy)
                    agr(PHIA, toy) = True
                    new_chain(PHIA, toy)
                        new_chain: create toyC
                        new_chain: create toyC^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4A,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:0)   !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-??--], np:5, ch:9A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-??--], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,        !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, you0)
                sc(PHI, you0) = True
                agr(PHI, you0) = True
                rnr(PHI, you0) = True
                chaining_e_to_n(PHIA, you0)
                    agr(PHIA, you0) = True
                    new_chain(PHIA, you0)
                        new_chain: create you0B
                        new_chain: create you0B^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3B,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-??--], np:5, ch:9A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-??--], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,        !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
            chaining_n_to_n(PHI, I0)
                sc(PHI, I0) = True
                agr(PHI, I0) = True
                rnr(PHI, I0) = True
                chaining_e_to_n(PHIA, I0)
                    agr(PHIA, I0) = True
                    new_chain(PHIA, I0)
                        new_chain: create I0C
                        new_chain: create I0C^PHIA

_________________________NODES__________________________
!    !                                                 !
! 1  ! (C, up:0, dn:2, lt:0, rt:0, th:2, nu:1)         !
! 2  ! (S, up:1, dn:3, lt:0, rt:6, th:3, nu:2)         !
! 3  ! (N, lit:I0, ftr:[++---?+--], up:2, dn:0,        !
!    !  lt:0, rt:4, th:4, np:3, ch:0, co:3A, ec:3C,    !
!    !  pr:0, su:4, nu:3)                              !
! 3A ! (E, sub:A, ftr:[++---?+--], np:3, ch:0, co:3B)  !
! 3B ! (E, sub:B, ftr:[++---?+--], np:3, ch:8A, co:3C) !
! 3C ! (E, sub:C, ftr:[++---?+--], np:3, ch:7A, co:0)  !
! 4  ! (N, lit:you0, ftr:[+-+-??+--], up:2, dn:0,      !
!    !  lt:3, rt:5, th:5, np:4, ch:0, co:4A, ec:4B,    !
!    !  pr:3, su:5, nu:4)                              !
! 4A ! (E, sub:A, ftr:[+-+-??+--], np:4, ch:0, co:4B)  !
! 4B ! (E, sub:B, ftr:[+-+-??+--], np:4, ch:7A, co:0)  !
! 5  ! (N, lit:toy, ftr:[---+-??--], up:2, dn:0,       !
!    !  lt:4, rt:0, th:6, np:5, ch:0, co:5A, ec:5C,    !
!    !  pr:4, su:7, nu:5)                              !
! 5A ! (E, sub:A, ftr:[---+-??--], np:5, ch:0, co:5B)  !
! 5B ! (E, sub:B, ftr:[---+-??--], np:5, ch:9A, co:5C) !
! 5C ! (E, sub:C, ftr:[---+-??--], np:5, ch:7A, co:0)  !
! 6  ! (S, up:1, dn:7, lt:2, rt:0, th:7, nu:6)         !
! 7  ! (N, lit:PHI, ftr:[+??????--], up:6, dn:0,       !
!    !  lt:0, rt:8, th:8, np:7, ch:0, co:7A, ec:7A,    !
!    !  pr:5, su:8, nu:7)                              !
! 7A ! (E, sub:A, ftr:[+??????--], np:7, ch:0, co:0)   !
! 8  ! (N, lit:me, ftr:[++---?+--], up:6, dn:0,        !
!    !  lt:7, rt:9, th:9, np:8, ch:0, co:8A, ec:8A,    !
!    !  pr:7, su:9, nu:8)                              !
! 8A ! (E, sub:A, ftr:[++---?+--], np:8, ch:0, co:0)   !
! 9  ! (N, lit:that, ftr:[+--+-??--], up:6, dn:0,      !
!    !  lt:8, rt:0, th:0, np:9, ch:0, co:9A, ec:9A,    !
!    !  pr:8, su:0, nu:9)                              !
! 9A ! (E, sub:A, ftr:[+--+-??--], np:9, ch:0, co:0)   !
!____!_________________________________________________!

                    new_chain: exiting
                chaining_e_to_n: exiting
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(you0)
        non_refl_chaining(you0)
            chaining_n_to_n(you0, that)
                sc(you0, that) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, me)
                sc(you0, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, PHI)
                sc(you0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, toy)
                sc(you0, toy) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(you0, I0)
                sc(you0, I0) = True
                agr(you0, I0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
    chaining_n(I0)
        non_refl_chaining(I0)
            chaining_n_to_n(I0, that)
                sc(I0, that) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, me)
                sc(I0, me) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, PHI)
                sc(I0, PHI) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, toy)
                sc(I0, toy) = False
            chaining_n_to_n: exiting
            chaining_n_to_n(I0, you0)
                sc(I0, you0) = False
            chaining_n_to_n: exiting
        non_refl_chaining: exiting
    chaining_n: exiting
chaining: exiting
